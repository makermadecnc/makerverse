#!/bin/bash
#
# ARG_POSITIONAL_SINGLE([kiosk-url],[],[url to open in a Chromium kiosk])
# ARG_OPTIONAL_SINGLE([chromium-flags],[f],[flags to pass to chromium-browser],['--noerrdialogs --disable-infobars --ignore-certificate-errors'])
# ARGBASH_GO()
# needed because of Argbash --> m4_ignore([
### START OF CODE GENERATED BY Argbash v2.8.1 one line above ###
# Argbash is a bash code generator used to get arguments parsing right.
# Argbash is FREE SOFTWARE, see https://argbash.io for more info
# Generated online by https://argbash.io/generate


die()
{
  local _ret=$2
  test -n "$_ret" || _ret=1
  test "$_PRINT_HELP" = yes && print_help >&2
  echo "$1" >&2
  exit ${_ret}
}


begins_with_short_option()
{
  local first_option all_short_options='f'
  first_option="${1:0:1}"
  test "$all_short_options" = "${all_short_options/$first_option/}" && return 1 || return 0
}

# THE DEFAULTS INITIALIZATION - POSITIONALS
_positionals=()
_arg_kiosk_url="url to open in a Chromium kiosk"
# THE DEFAULTS INITIALIZATION - OPTIONALS
_arg_chromium_flags='--noerrdialogs --disable-infobars --ignore-certificate-errors'


print_help()
{
  printf 'Usage: %s [-f|--chromium-flags <arg>] [<kiosk-url>]\n' "$0"
  printf '\t%s\n' "-f, --chromium-flags: flags to pass to chromium-browser (default: ''--noerrdialogs --disable-infobars --ignore-certificate-errors'')"
}


parse_commandline()
{
  _positionals_count=0
  while test $# -gt 0
  do
    _key="$1"
    case "$_key" in
      -f|--chromium-flags)
        test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
        _arg_chromium_flags="$2"
        shift
        ;;
      --chromium-flags=*)
        _arg_chromium_flags="${_key##--chromium-flags=}"
        ;;
      -f*)
        _arg_chromium_flags="${_key##-f}"
        ;;
      *)
        _last_positional="$1"
        _positionals+=("$_last_positional")
        _positionals_count=$((_positionals_count + 1))
        ;;
    esac
    shift
  done
}


handle_passed_args_count()
{
  test "${_positionals_count}" -le 1 || _PRINT_HELP=yes die "FATAL ERROR: There were spurious positional arguments --- we expect between 0 and 1, but got ${_positionals_count} (the last one was: '${_last_positional}')." 1
}


assign_positional_args()
{
  local _positional_name _shift_for=$1
  _positional_names="_arg_kiosk_url "

  shift "$_shift_for"
  for _positional_name in ${_positional_names}
  do
    test $# -gt 0 || break
    eval "$_positional_name=\${1}" || die "Error during argument parsing, possibly an Argbash bug." 1
    shift
  done
}

parse_commandline "$@"
handle_passed_args_count
assign_positional_args 1 "${_positionals[@]}"

# OTHER STUFF GENERATED BY Argbash

### END OF CODE GENERATED BY Argbash (sortof) ### ])
# [ <-- needed because of Argbash

# Trick Chromium into thinking everything exited cleanly
sed -i 's/"exited_cleanly": false/"exited_cleanly": true/' ~/.config/chromium/Default/Preferences

# Start chromium
cmd="/usr/bin/chromium-browser $_arg_chromium_flags --app=$_arg_kiosk_url"
echo "Opening chromium: $cmd"
$cmd &

# ] <-- needed because of Argbash
