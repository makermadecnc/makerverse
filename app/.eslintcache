[{"/Users/zaneclaes/OWS/OWE/Makerverse/App/src/lib/Makerverse/apollo.ts":"1","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/providers/MakerverseProvider.tsx":"2","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/lib/analytics.ts":"3","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/store/redux.ts":"4","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/providers/SystemPortProvider.tsx":"5","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/views/ProtectedApp.tsx":"6","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/lib/Makerverse/index.ts":"7","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/lib/Makerverse/reducers.ts":"8","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/lib/Makerverse/Workspaces.ts":"9","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/lib/workspaces/index.ts":"10","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/lib/Makerverse/types.ts":"11","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/components/Login/index.ts":"12","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/lib/workspaces/workspace.ts":"13","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/lib/semvers.ts":"14","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/lib/workspaces/active-state.ts":"15","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/lib/workspaces/workspace-axis.ts":"16","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/components/Login/CallbackPage.tsx":"17","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/components/Login/LoginPage.tsx":"18","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/lib/Makerverse/MakerverseContext.ts":"19","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/components/Login/Styles.ts":"20","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/components/Navigation/ReconnectRedirect.tsx":"21","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/providers/SystemPortContext.ts":"22","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/constants/docs.ts":"23","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/views/App.tsx":"24","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/views/index.ts":"25","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/providers/index.ts":"26","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/providers/MakerverseHooks.ts":"27","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/components/Navigation/index.tsx":"28","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/views/Docs/index.tsx":"29","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/views/Workspace/index.tsx":"30","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/views/WorkspaceCreator/index.tsx":"31","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/views/Settings/index.tsx":"32","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/views/Home/index.tsx":"33","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/components/Navigation/Styles.ts":"34","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/components/Navigation/SideDrawer.tsx":"35","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/components/Navigation/HeaderBar.tsx":"36","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/components/Navigation/ProtectedRoute.tsx":"37","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/components/Navigation/NotFound.tsx":"38","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/providers/SystemPortHooks.ts":"39","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/views/WorkspaceCreator/Styles.ts":"40","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/views/WorkspaceCreator/CreateWorkspaceModal.tsx":"41","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/components/Ports/OpenMachinePort.tsx":"42","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/components/Navigation/ListMenu.tsx":"43","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/components/Navigation/UserMenu.tsx":"44","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/components/Ports/Styles.ts":"45","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/components/Ports/PortStatus.tsx":"46","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/components/Ports/PortSelect.tsx":"47","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/components/Ports/PortConnectionSteps.tsx":"48","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/components/Navigation/ListMenuItem.tsx":"49","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/components/Modals/BackendDiconnectedModal.tsx":"50","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/views/Workspace/WorkspaceConnector.tsx":"51","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/components/Workspaces/OpenWorkspaceButton.tsx":"52","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/components/Workspaces/Styles.ts":"53"},{"size":2991,"mtime":1606943037696,"results":"54","hashOfConfig":"55"},{"size":4985,"mtime":1607021194815,"results":"56","hashOfConfig":"55"},{"size":2031,"mtime":1606918987313,"results":"57","hashOfConfig":"55"},{"size":1085,"mtime":1606319571150,"results":"58","hashOfConfig":"55"},{"size":2856,"mtime":1607030543004,"results":"59","hashOfConfig":"55"},{"size":2154,"mtime":1606919002723,"results":"60","hashOfConfig":"55"},{"size":91,"mtime":1606919306373,"results":"61","hashOfConfig":"55"},{"size":515,"mtime":1606319024700,"results":"62","hashOfConfig":"55"},{"size":2086,"mtime":1606919146763,"results":"63","hashOfConfig":"55"},{"size":52,"mtime":1605977443411,"results":"64","hashOfConfig":"55"},{"size":516,"mtime":1606319024702,"results":"65","hashOfConfig":"55"},{"size":110,"mtime":1605810123128,"results":"66","hashOfConfig":"55"},{"size":17177,"mtime":1607009568902,"results":"67","hashOfConfig":"55"},{"size":1031,"mtime":1605726040464,"results":"68","hashOfConfig":"55"},{"size":9880,"mtime":1606497234574,"results":"69","hashOfConfig":"55"},{"size":4959,"mtime":1606241698259,"results":"70","hashOfConfig":"55"},{"size":2729,"mtime":1606919399429,"results":"71","hashOfConfig":"55"},{"size":4256,"mtime":1606740707435,"results":"72","hashOfConfig":"55"},{"size":940,"mtime":1606941826741,"results":"73","hashOfConfig":"55"},{"size":1160,"mtime":1606847416723,"results":"74","hashOfConfig":"55"},{"size":572,"mtime":1606327522536,"results":"75","hashOfConfig":"55"},{"size":422,"mtime":1606577054184,"results":"76","hashOfConfig":"55"},{"size":136,"mtime":1606848450002,"results":"77","hashOfConfig":"55"},{"size":2456,"mtime":1607009568908,"results":"78","hashOfConfig":"55"},{"size":252,"mtime":1605977384904,"results":"79","hashOfConfig":"55"},{"size":35,"mtime":1606568597072,"results":"80","hashOfConfig":"55"},{"size":1533,"mtime":1606941845235,"results":"81","hashOfConfig":"55"},{"size":968,"mtime":1607029480978,"results":"82","hashOfConfig":"55"},{"size":843,"mtime":1606742886299,"results":"83","hashOfConfig":"55"},{"size":813,"mtime":1607009738697,"results":"84","hashOfConfig":"55"},{"size":1910,"mtime":1606919152880,"results":"85","hashOfConfig":"55"},{"size":170,"mtime":1605811767094,"results":"86","hashOfConfig":"55"},{"size":338,"mtime":1606245292423,"results":"87","hashOfConfig":"55"},{"size":2302,"mtime":1606926043546,"results":"88","hashOfConfig":"55"},{"size":1417,"mtime":1607029549359,"results":"89","hashOfConfig":"55"},{"size":1453,"mtime":1606240046501,"results":"90","hashOfConfig":"55"},{"size":944,"mtime":1605811448830,"results":"91","hashOfConfig":"55"},{"size":380,"mtime":1605811998908,"results":"92","hashOfConfig":"55"},{"size":200,"mtime":1606577019220,"results":"93","hashOfConfig":"55"},{"size":349,"mtime":1606847488726,"results":"94","hashOfConfig":"55"},{"size":8069,"mtime":1607033792664,"results":"95","hashOfConfig":"55"},{"size":6658,"mtime":1607015116967,"results":"96","hashOfConfig":"55"},{"size":3084,"mtime":1607029671215,"results":"97","hashOfConfig":"55"},{"size":3286,"mtime":1607009701910,"results":"98","hashOfConfig":"55"},{"size":620,"mtime":1607015116961,"results":"99","hashOfConfig":"55"},{"size":3087,"mtime":1607034046011,"results":"100","hashOfConfig":"55"},{"size":2973,"mtime":1606916477542,"results":"101","hashOfConfig":"55"},{"size":4872,"mtime":1607010949014,"results":"102","hashOfConfig":"55"},{"size":989,"mtime":1606501901763,"results":"103","hashOfConfig":"55"},{"size":1525,"mtime":1607033871646,"results":"104","hashOfConfig":"55"},{"size":1827,"mtime":1607034719334,"results":"105","hashOfConfig":"55"},{"size":2095,"mtime":1607021028369,"results":"106","hashOfConfig":"55"},{"size":434,"mtime":1607020527313,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"136b5ih",{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"110"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"110"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"110"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"110"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"110"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"110"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"110"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"216","messages":"217","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"/Users/zaneclaes/OWS/OWE/Makerverse/App/src/lib/Makerverse/apollo.ts",[],[],"/Users/zaneclaes/OWS/OWE/Makerverse/App/src/providers/MakerverseProvider.tsx",["222","223"],"/Users/zaneclaes/OWS/OWE/Makerverse/App/src/lib/analytics.ts",[],"/Users/zaneclaes/OWS/OWE/Makerverse/App/src/store/redux.ts",[],"/Users/zaneclaes/OWS/OWE/Makerverse/App/src/providers/SystemPortProvider.tsx",["224"],"/Users/zaneclaes/OWS/OWE/Makerverse/App/src/views/ProtectedApp.tsx",[],"/Users/zaneclaes/OWS/OWE/Makerverse/App/src/lib/Makerverse/index.ts",[],"/Users/zaneclaes/OWS/OWE/Makerverse/App/src/lib/Makerverse/reducers.ts",[],"/Users/zaneclaes/OWS/OWE/Makerverse/App/src/lib/Makerverse/Workspaces.ts",["225"],"import Workspace from 'lib/workspaces/workspace';\n\n// export type WorkspaceMap = { [key: string]: Workspace };\n\nexport default class Workspaces {\n  // _makerverse: IMakerverse;\n\n  // _currentWorkspace?: Workspace = undefined;\n  //\n  // _all: WorkspaceMap = {};\n  //\n  // _log?: Logger = undefined;\n  //\n  // constructor(makerverse: IMakerverse) {\n  //   this._makerverse = makerverse;\n  // }\n  //\n  // get all(): WorkspaceMap {\n  //   return this._all;\n  // }\n  //\n  // get current(): Workspace | undefined {\n  //   return this._currentWorkspace;\n  // }\n  //\n  // set current(ws: Workspace | undefined) {\n  //   this.log.debug('setting workspace to', ws?.id);\n  //   if (this.current) {\n  //     if (ws && ws.id === this.current.id) {\n  //       return;\n  //     }\n  //     this.current.isActive = false;\n  //   }\n  //   this._currentWorkspace = ws;\n  //   if (this.current) {\n  //     this.current.isActive = true;\n  //   }\n  // }\n  //\n  // findByPath(path: string): Workspace | undefined {\n  //   if (path.startsWith('/workspaces')) {\n  //     path = path.substring('/workspaces'.length);\n  //   }\n  //   return _.find(this.all, (w) => {\n  //     return w.path === path;\n  //   });\n  // }\n  // //\n  // // load(mv: IMakerverse, record: WorkspaceRecord): Workspace | undefined {\n  // //   const id: string = record.id;\n  // //   if (_.has(this.all, id)) {\n  // //     this.all[id]._record = {\n  // //       ...this.all[id]._record,\n  // //       ...record,\n  // //     };\n  // //   } else {\n  // //     this.all[id] = new Workspace(mv, record);\n  // //   }\n  // //   return this.all[id];\n  // // }\n  //\n  // async unload(id: string): Promise<void> {\n  //   if (!_.has(this.all, id)) {\n  //     return;\n  //   }\n  //   const workspace = this.all[id];\n  //   workspace.removeControllerEvents(workspace._controllerEvents);\n  //   await workspace.closePort();\n  //   delete this.all[id];\n  // }\n  //\n  // disconnect(): void {\n  //   Object.keys(this.all).map((id) => {\n  //     const workspace: Workspace = this.all[id];\n  //     void workspace.controller.disconnect();\n  //   });\n  // }\n}\n","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/lib/workspaces/index.ts",[],"/Users/zaneclaes/OWS/OWE/Makerverse/App/src/lib/Makerverse/types.ts",[],"/Users/zaneclaes/OWS/OWE/Makerverse/App/src/components/Login/index.ts",[],"/Users/zaneclaes/OWS/OWE/Makerverse/App/src/lib/workspaces/workspace.ts",[],"/Users/zaneclaes/OWS/OWE/Makerverse/App/src/lib/semvers.ts",[],"/Users/zaneclaes/OWS/OWE/Makerverse/App/src/lib/workspaces/active-state.ts",[],"/Users/zaneclaes/OWS/OWE/Makerverse/App/src/lib/workspaces/workspace-axis.ts",[],"/Users/zaneclaes/OWS/OWE/Makerverse/App/src/components/Login/CallbackPage.tsx",["226","227"],"import {Typography } from '@material-ui/core';\nimport useLogger from '@openworkshop/lib/utils/logging/UseLogger';\nimport AlertList from '@openworkshop/ui/components/Alerts/AlertList';\nimport ToolbarCard from '@openworkshop/ui/components/Cards/ToolbarCard';\nimport ThreeColumns from '@openworkshop/ui/components/Layout/ThreeColumns';\nimport { User } from 'oidc-client';\nimport React, { FunctionComponent } from 'react';\nimport {Trans, useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { CallbackComponent } from 'redux-oidc';\nimport analytics from '../../lib/analytics';\nimport {MakerverseContext} from '../../lib/Makerverse';\nimport ReconnectRedirect from '../Navigation/ReconnectRedirect';\nimport useStyles from './Styles';\n\ntype Props = {\n\n};\n\nconst CallbackPage: FunctionComponent<Props> = () => {\n  const { t } = useTranslation();\n  const log = useLogger(CallbackPage);\n  const classes = useStyles();\n  const [error, setError] = React.useState<Error | undefined>(undefined);\n  const [token, setToken] = React.useState<string | undefined>(undefined);\n  const makerverse = React.useContext(MakerverseContext);\n\n  const isLoading = !error && !token;\n\n  function handleSuccess(oidc: User) {\n    log.debug('success', oidc);\n    setError(undefined);\n    analytics.event({\n      category: 'interaction',\n      action: 'logged-in',\n    });\n    setToken(oidc.access_token);\n  }\n\n  function handleError(err: Error) {\n    log.debug(err);\n    setError(err);\n    analytics.event({\n      category: 'interaction',\n      action: 'login-error',\n      label: `${err.name}: ${err.message}`,\n    });\n  }\n\n  function renderError(err: Error) {\n    return <AlertList error={err} />;\n  }\n\n  const footer = error ? <Typography className={classes.centered} variant=\"subtitle1\">\n    <Link to=\"/login\">\n      <Trans>Return to Login</Trans>\n    </Link>\n  </Typography> : undefined;\n\n  function renderBody() {\n    if (error) {\n      return <AlertList error={error} />;\n    }\n    if (token) {\n      return (\n        // After login, the session needs to be recreated to change the user.\n        <ReconnectRedirect to=\"/\" />\n      );\n    }\n    return (\n      <CallbackComponent\n        userManager={makerverse.ows.authManager}\n        successCallback={handleSuccess}\n        errorCallback={handleError}\n      >\n        <Typography variant=\"subtitle1\" className={classes.centered}>\n          <Trans>Exchanging keys with gatekeeper...</Trans>\n        </Typography>\n      </CallbackComponent>\n    );\n  }\n\n  return (\n    <ThreeColumns>\n      <ToolbarCard\n        title={t('Authentication')}\n        footer={footer}\n      >\n        {renderBody()}\n      </ToolbarCard>\n    </ThreeColumns>\n  );\n};\n\nexport default CallbackPage;\n","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/components/Login/LoginPage.tsx",["228","229","230","231","232","233","234","235","236"],"import {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  CircularProgress,\n  FormControlLabel,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\nimport { OpenWorkShop } from '@openworkshop/lib';\nimport useLogger from '@openworkshop/lib/utils/logging/UseLogger';\nimport AlertList from '@openworkshop/ui/components/Alerts/AlertList';\nimport ToolbarCard from '@openworkshop/ui/components/Cards/ToolbarCard';\nimport ThreeColumns from '@openworkshop/ui/components/Layout/ThreeColumns';\nimport React, { FunctionComponent } from 'react';\nimport {MakerverseUser} from '../../api/graphql';\nimport useStyles from './Styles';\nimport analytics from 'lib/analytics';\nimport settings from 'config/settings';\nimport docs from 'constants/docs';\nimport { useTranslation } from 'react-i18next';\nimport { useHistory, useLocation } from 'react-router-dom';\n\ninterface OwnProps {\n  children: React.ReactNode;\n}\n\ntype Props = OwnProps;\n\nconst LoginPage: FunctionComponent<Props> = (props) => {\n  const log = useLogger(LoginPage);\n  const ows = React.useContext(OpenWorkShop);\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const [guest, setGuest] = React.useState<MakerverseUser | undefined>(undefined);\n  const [useCookies, setUseCookies] = React.useState<boolean>(false);\n  const [dangerous, setDangerous] = React.useState<boolean>(false);\n  const [authenticating, setAuthenticating] = React.useState<boolean>(false);\n  const [error, setError] = React.useState<Error | undefined>(undefined);\n  //\n  // if (auth.isAuthenticated()) {\n  //   log.debug('Already logged in; redirecting.');\n  //   // return <Redirect to='/home' />;\n  // }\n\n  if (error) log.error(error);\n\n  function handleGuest() {\n    log.debug('guest login');\n  }\n\n  function handleLogin(register: boolean) {\n    log.debug('begin authentication');\n    analytics.event({\n      category: 'interaction',\n      action: register ? 'register' : 'login',\n    });\n    setAuthenticating(true);\n    setError(undefined);\n\n    ows.authManager\n      .createSigninRequest()\n      .then((r) => {\n        const url = register ? r.url.replace('/login?', '/register?') : r.url;\n        window.location.replace(url);\n      })\n      .catch((e) => {\n        setAuthenticating(false);\n        setError(e);\n      });\n  }\n\n  const footer = <Typography variant=\"subtitle2\">\n    {!guest && (\n      <analytics.OutboundLink eventLabel='why_login' to={docs.urlSecurity} target='_blank'>\n        {t('Why is it necessary to log in?')}\n      </analytics.OutboundLink>\n    )}\n    {guest && (\n      <div>\n        <FormControlLabel\n          control={<Checkbox checked={useCookies} onChange={() => setUseCookies(!useCookies)} />}\n          label={t('Remember me (I consent to cookies)')}\n        />\n        <FormControlLabel\n          control={<Checkbox checked={dangerous} onChange={() => setDangerous(!dangerous)} />}\n          label={t('I understand \"guest mode\" is hazardous. ')}\n        />\n        <br />\n        <Button onClick={() => handleGuest()} disabled={authenticating || !dangerous}>\n          {t('Continue as Guest')}\n        </Button>\n      </div>\n    )}\n  </Typography>;\n\n  return (\n    <ThreeColumns>\n      <ToolbarCard\n        title={t('Login to {{ productName }}', settings)}\n        footer={footer}\n      >\n        <div className={classes.centered}>\n          <AlertList error={error} />\n          <Button\n            className={classes.actionButton}\n            variant='outlined'\n            color='primary'\n            disabled={authenticating}\n            onClick={() => handleLogin(false)}\n          >\n            <img src='/images/logos/makerverse.png' alt='Logo' className={classes.logo1} />\n            {!authenticating && (\n              <span>\n                {t('Login')}\n                <br />\n                {t('(or Create Account)')}\n              </span>\n            )}\n            {authenticating && <CircularProgress />}\n            <img src='/images/logos/openworkshop.png' alt='Logo' className={classes.logo2} />\n          </Button>\n        </div>\n      </ToolbarCard>\n      <div className={classes.bottom}>\n        <Typography variant='subtitle2'>v. {settings.version.full}</Typography>\n      </div>\n    </ThreeColumns>\n  );\n};\n\nexport default LoginPage;\n","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/lib/Makerverse/MakerverseContext.ts",[],"/Users/zaneclaes/OWS/OWE/Makerverse/App/src/components/Login/Styles.ts",[],"/Users/zaneclaes/OWS/OWE/Makerverse/App/src/components/Navigation/ReconnectRedirect.tsx",[],"/Users/zaneclaes/OWS/OWE/Makerverse/App/src/providers/SystemPortContext.ts",[],"/Users/zaneclaes/OWS/OWE/Makerverse/App/src/constants/docs.ts",[],"/Users/zaneclaes/OWS/OWE/Makerverse/App/src/views/App.tsx",[],"/Users/zaneclaes/OWS/OWE/Makerverse/App/src/views/index.ts",[],"/Users/zaneclaes/OWS/OWE/Makerverse/App/src/providers/index.ts",[],"/Users/zaneclaes/OWS/OWE/Makerverse/App/src/providers/MakerverseHooks.ts",[],"/Users/zaneclaes/OWS/OWE/Makerverse/App/src/components/Navigation/index.tsx",[],"/Users/zaneclaes/OWS/OWE/Makerverse/App/src/views/Docs/index.tsx",[],"/Users/zaneclaes/OWS/OWE/Makerverse/App/src/views/Workspace/index.tsx",[],"/Users/zaneclaes/OWS/OWE/Makerverse/App/src/views/WorkspaceCreator/index.tsx",[],"/Users/zaneclaes/OWS/OWE/Makerverse/App/src/views/Settings/index.tsx",[],"/Users/zaneclaes/OWS/OWE/Makerverse/App/src/views/Home/index.tsx",["237"],"import React, { FunctionComponent } from 'react';\nimport {MakerverseContext} from '../../lib/Makerverse';\n\nconst Home: FunctionComponent = () => {\n  const makerverse = React.useContext(MakerverseContext);\n  const hasWorkspaces = makerverse.workspaces.length > 0;\n\n  return (\n    <div>\n      Home\n\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/components/Navigation/Styles.ts",[],"/Users/zaneclaes/OWS/OWE/Makerverse/App/src/components/Navigation/SideDrawer.tsx",[],"/Users/zaneclaes/OWS/OWE/Makerverse/App/src/components/Navigation/HeaderBar.tsx",["238","239"],"import { AppBar, IconButton, Toolbar, Typography } from '@material-ui/core';\nimport useLogger from '@openworkshop/lib/utils/logging/UseLogger';\nimport React, { FunctionComponent } from 'react';\nimport settings from '../../config/settings';\nimport { MakerverseContext } from '../../lib/Makerverse';\nimport useStyles from './Styles';\nimport UserMenu from './UserMenu';\n\ninterface OwnProps {\n  toggleDrawerOpen: () => void;\n}\n\ntype Props = OwnProps;\n\nconst HeaderBar: FunctionComponent<Props> = (props) => {\n  const log = useLogger(HeaderBar);\n  const makerverse = React.useContext(MakerverseContext);\n  // const workspace = makerverse.workspaces.current;\n  const classes = useStyles();\n\n  // const bk = workspace ? { backgroundColor: workspace.hexColor } : {};\n  // log.debug('workspace', workspace, bk);\n\n  return (\n    <AppBar position='fixed' className={classes.appBar}>\n      <Toolbar className={classes.toolbar} >\n        <IconButton\n          aria-label='open drawer'\n          edge='start'\n          onClick={() => props.toggleDrawerOpen()}\n          className={classes.menuButton}\n        >\n          <img\n            src=\"/images/logos/makerverse.png\"\n            className={classes.sidebarIcon}\n          />\n        </IconButton>\n        <Typography variant='h1' noWrap className={classes.headerTitle}>\n          {settings.productName}\n        </Typography>\n        <UserMenu />\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default HeaderBar;\n","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/components/Navigation/ProtectedRoute.tsx",[],"/Users/zaneclaes/OWS/OWE/Makerverse/App/src/components/Navigation/NotFound.tsx",[],"/Users/zaneclaes/OWS/OWE/Makerverse/App/src/providers/SystemPortHooks.ts",[],"/Users/zaneclaes/OWS/OWE/Makerverse/App/src/views/WorkspaceCreator/Styles.ts",[],"/Users/zaneclaes/OWS/OWE/Makerverse/App/src/views/WorkspaceCreator/CreateWorkspaceModal.tsx",[],"/Users/zaneclaes/OWS/OWE/Makerverse/App/src/components/Ports/OpenMachinePort.tsx",["240"],"import {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faPlug, faPowerOff} from '@fortawesome/free-solid-svg-icons';\nimport {Fab, Grid, Paper, Typography, useTheme, Modal, FormControl} from '@material-ui/core';\nimport {ICustomizedMachine} from '@openworkshop/lib/api/Machines/CustomizedMachine';\nimport useLogger from '@openworkshop/lib/utils/logging/UseLogger';\nimport React, {FunctionComponent} from 'react';\nimport {Trans, useTranslation} from 'react-i18next';\nimport HoverHelpStep from '@openworkshop/ui/components/Alerts/HoverHelpStep';\nimport {\n  FirmwareRequirementInput,\n  MutationOpenPortArgs,\n  PortState,\n  SerialPortOptionsInput,\n  useClosePortMutation,\n  useOpenPortMutation\n} from '../../api/graphql';\nimport PortSelect from '../../components/Ports/PortSelect';\nimport {useSystemPorts} from '../../providers/SystemPortHooks';\nimport useStyles from './Styles';\nimport PortConnectionSteps from './PortConnectionSteps';\nimport {IAlertMessage} from '@openworkshop/ui/components/Alerts/AlertMessage';\nimport AlertList from '@openworkshop/ui/components/Alerts/AlertList';\n\ninterface OwnProps {\n  machine: ICustomizedMachine;\n  onConnected: () => void;\n  selectedPortName: string;\n  // Omitting a port name setter implies that the component may not change ports, and thus no selector.\n  // (button-only).\n  setSelectedPortName: ((portName: string) => void) | null;\n}\n\ntype Props = OwnProps;\n\nconst OpenMachinePort: FunctionComponent<Props> = (props) => {\n  const log = useLogger(OpenMachinePort);\n  const theme = useTheme();\n  const { t } = useTranslation();\n  const classes = useStyles();\n  const portCollection = useSystemPorts();\n  const [openPort, openedPort] = useOpenPortMutation();\n  const [closePort, closedPort] = useClosePortMutation();\n  const { machine, onConnected, selectedPortName, setSelectedPortName } = props;\n  const [modalOpen, setModalOpen] = React.useState(false);\n  const port = portCollection.portMap[selectedPortName];\n  const isConnected = port && port.connection;\n  const isConnecting = port && port.state === PortState.Opening;\n  const isActive = port && port.state === PortState.Active;\n  const canConnect = machine && port && !isConnected && !isConnecting;\n  const [error, setError] = React.useState<IAlertMessage | undefined>(undefined);\n\n  async function onPressConnect() {\n    // TODO: These may need to be configurable...\n    const opts: SerialPortOptionsInput = {\n      baudRate: machine.firmware.baudRate as number,\n      dataBits: null,\n      handshake: null,\n      parity: null,\n      readBufferSize: null,\n      readTimeout: null,\n      rtsEnable: machine.firmware.rtscts,\n      stopBits: null,\n      writeBufferSize: null,\n      writeTimeout: null,\n    };\n\n    const fw: FirmwareRequirementInput = {\n      name: machine.firmware.name ?? null,\n      edition: machine.firmware.edition ?? null,\n      value: machine.firmware.value ?? null,\n      controllerType: machine.firmware.controllerType,\n    };\n\n    const args: MutationOpenPortArgs = {\n      friendlyName: 'CreateWorkspace',\n      portName: selectedPortName,\n      firmware: fw,\n      options: opts,\n    };\n    log.debug('opening port...', args);\n    try {\n      setError(undefined);\n      await openPort({variables: args});\n      log.debug('opened?', openedPort.data?.port);\n    } catch (e) {\n      setError(e);\n    }\n  }\n\n  async function onPressDisconnect() {\n    try {\n      log.debug('closing port', port.portName);\n      setError(undefined);\n      await closePort({ variables: { portName: port.portName }});\n      log.debug('closed?', closedPort.data?.port);\n    } catch (e) {\n      setError(e);\n    }\n  }\n\n  async function onPressCancel() {\n    await onPressDisconnect();\n  }\n\n  React.useEffect(() => {\n    if (isActive) {\n      log.debug('Connection now active; finalize workspace.');\n      onConnected();\n    }\n  }, [isActive, setModalOpen]);\n\n  async function closeModal() {\n    await onPressDisconnect();\n    setModalOpen(false);\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <Grid container spacing={2} >\n        <Grid item xs={12}>\n          <Typography variant='h5'>\n            <Trans>Connect to your Machine's Port</Trans>\n\n            <HoverHelpStep\n              tip={t('Makerverse will attempt to communicate with the device via the port, testing to see if it' +\n                ' understands the output.')}\n              isComplete={false}\n            />\n          </Typography>\n          <Typography variant='body2'>\n            <Trans>The port is the physical connection on the Makerverse host (e.g., USB).</Trans>\n          </Typography>\n        </Grid>\n        <Grid item xs={12} md={6} style={{ minHeight: 60, paddingTop: 0, marginTop: 0 }} >\n          <PortConnectionSteps port={port} />\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.portSelectItem} style={{ textAlign: 'center' }} >\n          {setSelectedPortName && <React.Fragment>\n            <PortSelect\n              selectedPortName={selectedPortName}\n              setSelectedPortName={setSelectedPortName}\n            />\n          </React.Fragment>}\n          {!isConnected && <FormControl\n            className={classes.formControl}\n          >\n            <Fab\n              color='primary'\n              type='submit'\n              variant='extended'\n              size='large'\n              onClick={canConnect ? onPressConnect : onPressCancel}\n              className={classes.connectionButton}\n              disabled={selectedPortName === ''}\n            >\n              <FontAwesomeIcon className={classes.connectIcon} icon={faPlug} />\n              <Typography variant=\"h6\">{isConnecting ? t('Cancel') : t('Connect')}</Typography>\n            </Fab>\n          </FormControl>}\n          {isConnected && <FormControl\n            className={classes.formControl}\n          >\n            <Fab\n              color='secondary'\n              type='submit'\n              variant='extended'\n              size='large'\n              onClick={onPressDisconnect}\n              className={classes.connectionButton}\n            >\n              <FontAwesomeIcon className={classes.connectIcon} icon={faPowerOff} />\n              <Typography variant=\"h6\"><Trans>Disconnect</Trans></Typography>\n            </Fab>\n          </FormControl>}\n        </Grid>\n        <Grid item xs={12}>\n          <AlertList error={error} />\n        </Grid>\n      </Grid>\n      <Modal\n        open={modalOpen}\n        onClose={closeModal}\n        aria-labelledby=\"modal-create-workspace\"\n        aria-describedby=\"modal-create-workspace\"\n      >\n        <div>Are you sure?</div>\n      </Modal>\n    </Paper>\n  );\n};\n\nexport default OpenMachinePort;\n","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/components/Navigation/ListMenu.tsx",["241","242","243","244"],"/Users/zaneclaes/OWS/OWE/Makerverse/App/src/components/Navigation/UserMenu.tsx",[],"/Users/zaneclaes/OWS/OWE/Makerverse/App/src/components/Ports/Styles.ts",[],"/Users/zaneclaes/OWS/OWE/Makerverse/App/src/components/Ports/PortStatus.tsx",["245"],"/Users/zaneclaes/OWS/OWE/Makerverse/App/src/components/Ports/PortSelect.tsx",[],"/Users/zaneclaes/OWS/OWE/Makerverse/App/src/components/Ports/PortConnectionSteps.tsx",["246"],"import {CircularProgress, Container, Step, StepLabel, Stepper, Typography, useTheme} from '@material-ui/core';\nimport * as React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport useLogger from '@openworkshop/lib/utils/logging/UseLogger';\nimport {MachineFirmwareFragment, PortState, PortStatusFragment,} from '../../api/graphql';\nimport {IAlertMessage} from '@openworkshop/ui/components/Alerts/AlertMessage';\nimport {faCircle, faDotCircle, faExclamationCircle} from '@fortawesome/free-solid-svg-icons';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {StepIconProps} from '@material-ui/core/StepIcon';\nimport {IMaybeHavePortStatus} from './types';\n\ntype Props = IMaybeHavePortStatus & {\n requiredFirmware?: MachineFirmwareFragment;\n};\n\nenum ConnectionStep {\n  NotOpen = -1,\n  OpenConnection = 0,\n  ReceiveData,\n  CheckProtocol,\n  InspectFirmware,\n  NumSteps,\n}\n\nconst StepIcon: React.FunctionComponent<StepIconProps> = (props) => {\n  const theme = useTheme();\n  const { active, completed, error } = props;\n\n  if (completed) return <FontAwesomeIcon color={theme.palette.primary.main} icon={faDotCircle} />;\n  if (error) return <FontAwesomeIcon color={theme.palette.error.main} icon={faExclamationCircle} />;\n  if (active) return <CircularProgress size={16} />;\n  return <FontAwesomeIcon icon={faCircle} />;\n};\n\nconst PortConnectionSteps: React.FunctionComponent<Props> = (props) => {\n  const log = useLogger(PortConnectionSteps);\n  const { t } = useTranslation();\n  const { port } = props;\n  const portState = port?.state ?? PortState.Unknown;\n  const [lastPortState, setLastPortState] = React.useState(PortState.Unknown);\n  const [activeStep, setActiveStep] = React.useState(ConnectionStep.NotOpen);\n  const stepsNumbers = [...Array(ConnectionStep.NumSteps).keys()];\n\n  // const onConfiguration = useMachineConfigurationSubscription({ variables: { portName: port.portName } });\n  // const hasDetectedFirmware = onConfiguration.data && onConfiguration.data.config.firmware.isValid;\n\n  function getName(step: ConnectionStep) {\n    if (step === ConnectionStep.NotOpen) return t('Not Open');\n    if (step === ConnectionStep.OpenConnection) return t('Open Connection');\n    if (step === ConnectionStep.ReceiveData) return t('Receive Data');\n    if (step === ConnectionStep.CheckProtocol) return t('Check Protocol');\n    if (step === ConnectionStep.InspectFirmware) return t('Inspect Firmware');\n    return t('Unknown');\n  };\n\n  function getTip(step: ConnectionStep) {\n    if (step === ConnectionStep.NotOpen) return t('This port is not open.');\n    if (step === ConnectionStep.OpenConnection) return t('Asking the computer for access to the port...');\n    if (step === ConnectionStep.ReceiveData) return t('Waiting for data from the machine...');\n    if (step === ConnectionStep.CheckProtocol) return t('Checking if data from machine is understood...');\n    if (step === ConnectionStep.InspectFirmware) return t('Ensuring compatible firmware...');\n    return t('Unknown');\n  }\n\n  function getError(step: ConnectionStep): IAlertMessage | undefined {\n    if (step === ConnectionStep.OpenConnection && port?.error) return port.error;\n    return undefined;\n  }\n\n  // Manage step progression.\n  React.useEffect(() => {\n    if (portState === lastPortState) return;\n    if (portState === PortState.Error) setActiveStep(ConnectionStep.OpenConnection);\n    if (portState === PortState.Ready || portState === PortState.Unknown) setActiveStep(ConnectionStep.NotOpen);\n    if (portState === PortState.Opening) setActiveStep(ConnectionStep.OpenConnection);\n    if (portState === PortState.Startup) setActiveStep(ConnectionStep.ReceiveData);\n    if (portState === PortState.HasData) setActiveStep(ConnectionStep.CheckProtocol);\n    if (portState === PortState.HasFirmware) setActiveStep(ConnectionStep.InspectFirmware);\n    if (portState === PortState.Active) setActiveStep(ConnectionStep.NumSteps);\n    log.debug('port state changed from', lastPortState, 'to', portState);\n    setLastPortState(portState);\n  }, [activeStep, setActiveStep, portState, lastPortState, setLastPortState]);\n\n  return (\n    <Container>\n      <Stepper activeStep={activeStep} orientation=\"vertical\" >\n        {stepsNumbers.map((num) => {\n          const error: IAlertMessage | undefined = num <= activeStep ? getError(num) : undefined;\n          const showCaption = error || num === activeStep;\n          return (\n            <Step key={num} >\n              <StepLabel StepIconComponent={StepIcon} error={!!error} >{getName(num)}</StepLabel>\n              {showCaption && <Typography variant=\"caption\" color={error ? 'error' : 'inherit'} >\n                {error && error.message}\n                {!error && getTip(num)}\n              </Typography>}\n            </Step>\n          );\n        })}\n      </Stepper>\n    </Container>\n  );\n};\n\nexport default PortConnectionSteps;\n","/Users/zaneclaes/OWS/OWE/Makerverse/App/src/components/Navigation/ListMenuItem.tsx",[],"/Users/zaneclaes/OWS/OWE/Makerverse/App/src/components/Modals/BackendDiconnectedModal.tsx",["247"],"/Users/zaneclaes/OWS/OWE/Makerverse/App/src/views/Workspace/WorkspaceConnector.tsx",["248","249"],"/Users/zaneclaes/OWS/OWE/Makerverse/App/src/components/Workspaces/OpenWorkspaceButton.tsx",["250"],"/Users/zaneclaes/OWS/OWE/Makerverse/App/src/components/Workspaces/Styles.ts",[],{"ruleId":"251","severity":1,"message":"252","line":4,"column":47,"nodeType":"253","messageId":"254","endLine":4,"endColumn":51},{"ruleId":"251","severity":1,"message":"255","line":41,"column":9,"nodeType":"253","messageId":"254","endLine":41,"endColumn":14},{"ruleId":"251","severity":1,"message":"256","line":5,"column":26,"nodeType":"253","messageId":"254","endLine":5,"endColumn":33},{"ruleId":"251","severity":1,"message":"257","line":1,"column":8,"nodeType":"253","messageId":"254","endLine":1,"endColumn":17},{"ruleId":"251","severity":1,"message":"258","line":28,"column":9,"nodeType":"253","messageId":"254","endLine":28,"endColumn":18},{"ruleId":"251","severity":1,"message":"259","line":50,"column":12,"nodeType":"253","messageId":"254","endLine":50,"endColumn":23},{"ruleId":"251","severity":1,"message":"260","line":3,"column":3,"nodeType":"253","messageId":"254","endLine":3,"endColumn":7},{"ruleId":"251","severity":1,"message":"261","line":4,"column":3,"nodeType":"253","messageId":"254","endLine":4,"endColumn":14},{"ruleId":"251","severity":1,"message":"262","line":5,"column":3,"nodeType":"253","messageId":"254","endLine":5,"endColumn":14},{"ruleId":"251","severity":1,"message":"263","line":6,"column":3,"nodeType":"253","messageId":"254","endLine":6,"endColumn":13},{"ruleId":"251","severity":1,"message":"264","line":10,"column":3,"nodeType":"253","messageId":"254","endLine":10,"endColumn":10},{"ruleId":"251","severity":1,"message":"265","line":25,"column":10,"nodeType":"253","messageId":"254","endLine":25,"endColumn":20},{"ruleId":"251","severity":1,"message":"266","line":25,"column":22,"nodeType":"253","messageId":"254","endLine":25,"endColumn":33},{"ruleId":"251","severity":1,"message":"267","line":33,"column":46,"nodeType":"253","messageId":"254","endLine":33,"endColumn":51},{"ruleId":"251","severity":1,"message":"268","line":38,"column":17,"nodeType":"253","messageId":"254","endLine":38,"endColumn":25},{"ruleId":"251","severity":1,"message":"269","line":6,"column":9,"nodeType":"253","messageId":"254","endLine":6,"endColumn":22},{"ruleId":"251","severity":1,"message":"270","line":16,"column":9,"nodeType":"253","messageId":"254","endLine":16,"endColumn":12},{"ruleId":"251","severity":1,"message":"271","line":17,"column":9,"nodeType":"253","messageId":"254","endLine":17,"endColumn":19},{"ruleId":"251","severity":1,"message":"272","line":37,"column":9,"nodeType":"253","messageId":"254","endLine":37,"endColumn":14},{"ruleId":"251","severity":1,"message":"273","line":11,"column":3,"nodeType":"253","messageId":"254","endLine":11,"endColumn":13},{"ruleId":"251","severity":1,"message":"274","line":18,"column":29,"nodeType":"253","messageId":"254","endLine":18,"endColumn":46},{"ruleId":"251","severity":1,"message":"267","line":35,"column":45,"nodeType":"253","messageId":"254","endLine":35,"endColumn":50},{"ruleId":"251","severity":1,"message":"270","line":36,"column":9,"nodeType":"253","messageId":"254","endLine":36,"endColumn":12},{"ruleId":"251","severity":1,"message":"275","line":3,"column":20,"nodeType":"253","messageId":"254","endLine":3,"endColumn":38},{"ruleId":"251","severity":1,"message":"275","line":5,"column":45,"nodeType":"253","messageId":"254","endLine":5,"endColumn":63},{"ruleId":"251","severity":1,"message":"267","line":13,"column":66,"nodeType":"253","messageId":"254","endLine":13,"endColumn":71},{"ruleId":"251","severity":1,"message":"276","line":19,"column":11,"nodeType":"253","messageId":"254","endLine":19,"endColumn":12},{"ruleId":"251","severity":1,"message":"277","line":25,"column":12,"nodeType":"253","messageId":"254","endLine":25,"endColumn":32},{"ruleId":"251","severity":1,"message":"267","line":10,"column":71,"nodeType":"253","messageId":"254","endLine":10,"endColumn":76},"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'token' is assigned a value but never used.","'PortMap' is defined but never used.","'Workspace' is defined but never used.","'isLoading' is assigned a value but never used.","'renderError' is defined but never used.","'Card' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'CardHeader' is defined but never used.","'Toolbar' is defined but never used.","'useHistory' is defined but never used.","'useLocation' is defined but never used.","'props' is defined but never used.","'setGuest' is assigned a value but never used.","'hasWorkspaces' is assigned a value but never used.","'log' is assigned a value but never used.","'makerverse' is assigned a value but never used.","'theme' is assigned a value but never used.","'Typography' is defined but never used.","'useListPortsQuery' is defined but never used.","'PortStatusFragment' is defined but never used.","'t' is assigned a value but never used.","'onConnectedToMachine' is defined but never used."]