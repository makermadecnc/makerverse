[{"/Users/zaneclaes/OWS/Makerverse/App/src/lib/Makerverse/index.ts":"1","/Users/zaneclaes/OWS/Makerverse/App/src/components/Login/CallbackPage.tsx":"2","/Users/zaneclaes/OWS/Makerverse/App/src/views/Docs/index.tsx":"3","/Users/zaneclaes/OWS/Makerverse/App/src/lib/workspaces/workspace-axis.ts":"4","/Users/zaneclaes/OWS/Makerverse/App/src/components/Navigation/UserMenu.tsx":"5","/Users/zaneclaes/OWS/Makerverse/App/src/components/Login/LoginPage.tsx":"6","/Users/zaneclaes/OWS/Makerverse/App/src/components/Navigation/ListMenu.tsx":"7","/Users/zaneclaes/OWS/Makerverse/App/src/lib/Makerverse/MakerverseContext.ts":"8","/Users/zaneclaes/OWS/Makerverse/App/src/views/index.ts":"9","/Users/zaneclaes/OWS/Makerverse/App/src/components/Login/index.ts":"10","/Users/zaneclaes/OWS/Makerverse/App/src/components/Navigation/index.tsx":"11","/Users/zaneclaes/OWS/Makerverse/App/src/lib/workspaces/active-state.ts":"12","/Users/zaneclaes/OWS/Makerverse/App/src/constants/docs.ts":"13","/Users/zaneclaes/OWS/Makerverse/App/src/views/WorkspaceCreator/index.tsx":"14","/Users/zaneclaes/OWS/Makerverse/App/src/api/graphql.tsx":"15","/Users/zaneclaes/OWS/Makerverse/App/src/components/Login/Styles.ts":"16","/Users/zaneclaes/OWS/Makerverse/App/src/store/redux.ts":"17","/Users/zaneclaes/OWS/Makerverse/App/src/components/Navigation/Styles.ts":"18","/Users/zaneclaes/OWS/Makerverse/App/src/lib/workspaces/workspace.ts":"19","/Users/zaneclaes/OWS/Makerverse/App/src/views/WorkspaceCreator/Styles.ts":"20","/Users/zaneclaes/OWS/Makerverse/App/src/lib/semvers.ts":"21","/Users/zaneclaes/OWS/Makerverse/App/src/components/Navigation/HeaderBar.tsx":"22","/Users/zaneclaes/OWS/Makerverse/App/src/components/Navigation/ListMenuItem.tsx":"23","/Users/zaneclaes/OWS/Makerverse/App/src/components/Navigation/NotFound.tsx":"24","/Users/zaneclaes/OWS/Makerverse/App/src/components/Navigation/SideDrawer.tsx":"25","/Users/zaneclaes/OWS/Makerverse/App/src/lib/analytics.ts":"26","/Users/zaneclaes/OWS/Makerverse/App/src/views/Workspace/index.tsx":"27","/Users/zaneclaes/OWS/Makerverse/App/src/components/Navigation/ProtectedRoute.tsx":"28","/Users/zaneclaes/OWS/Makerverse/App/src/lib/Makerverse/Workspaces.ts":"29","/Users/zaneclaes/OWS/Makerverse/App/src/lib/Makerverse/Hooks.ts":"30","/Users/zaneclaes/OWS/Makerverse/App/src/components/Login/TokenValidator.tsx":"31","/Users/zaneclaes/OWS/Makerverse/App/src/views/App.tsx":"32","/Users/zaneclaes/OWS/Makerverse/App/src/views/MakerverseProvider.tsx":"33"},{"size":116,"mtime":1606082835097,"results":"34","hashOfConfig":"35"},{"size":2754,"mtime":1606180582379,"results":"36","hashOfConfig":"37"},{"size":831,"mtime":1605895348786,"results":"38","hashOfConfig":"39"},{"size":5018,"mtime":1605971192869,"results":"40","hashOfConfig":"39"},{"size":2720,"mtime":1606230016178,"results":"41","hashOfConfig":"37"},{"size":4325,"mtime":1606179371829,"results":"42","hashOfConfig":"37"},{"size":2283,"mtime":1606008322946,"results":"43","hashOfConfig":"37"},{"size":3367,"mtime":1606229329292,"results":"44","hashOfConfig":"37"},{"size":252,"mtime":1605977384904,"results":"45","hashOfConfig":"37"},{"size":110,"mtime":1605810123128,"results":"46","hashOfConfig":"35"},{"size":842,"mtime":1605826281284,"results":"47","hashOfConfig":"35"},{"size":9893,"mtime":1605747749094,"results":"48","hashOfConfig":"37"},{"size":107,"mtime":1605716721482,"results":"49","hashOfConfig":"39"},{"size":902,"mtime":1605828412720,"results":"50","hashOfConfig":"37"},{"size":29652,"mtime":1606139810250,"results":"51","hashOfConfig":"39"},{"size":1146,"mtime":1606155670333,"results":"52","hashOfConfig":"37"},{"size":936,"mtime":1606153023800,"results":"53","hashOfConfig":"37"},{"size":2302,"mtime":1605970335421,"results":"54","hashOfConfig":"37"},{"size":16973,"mtime":1606008543669,"results":"55","hashOfConfig":"35"},{"size":209,"mtime":1605828267136,"results":"56","hashOfConfig":"35"},{"size":1031,"mtime":1605726040464,"results":"57","hashOfConfig":"35"},{"size":1455,"mtime":1606226892800,"results":"58","hashOfConfig":"37"},{"size":1320,"mtime":1606227664785,"results":"59","hashOfConfig":"37"},{"size":380,"mtime":1605811998908,"results":"60","hashOfConfig":"37"},{"size":1279,"mtime":1605825469025,"results":"61","hashOfConfig":"37"},{"size":2208,"mtime":1605975001027,"results":"62","hashOfConfig":"37"},{"size":413,"mtime":1605978577394,"results":"63","hashOfConfig":"37"},{"size":944,"mtime":1605811448830,"results":"64","hashOfConfig":"37"},{"size":2613,"mtime":1606229655145,"results":"65","hashOfConfig":"37"},{"size":227,"mtime":1605978521182,"results":"66","hashOfConfig":"37"},{"size":1630,"mtime":1606229987222,"results":"67","hashOfConfig":"37"},{"size":1735,"mtime":1606225285570,"results":"68","hashOfConfig":"37"},{"size":1925,"mtime":1606229589924,"results":"69","hashOfConfig":"37"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pz68q5",{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1999au8",{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5e1ei5",{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":20,"warningCount":29,"fixableErrorCount":4,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/zaneclaes/OWS/Makerverse/App/src/lib/Makerverse/index.ts",[],"/Users/zaneclaes/OWS/Makerverse/App/src/components/Login/CallbackPage.tsx",["144","145","146"],"/Users/zaneclaes/OWS/Makerverse/App/src/views/Docs/index.tsx",[],"/Users/zaneclaes/OWS/Makerverse/App/src/lib/workspaces/workspace-axis.ts",[],"/Users/zaneclaes/OWS/Makerverse/App/src/components/Navigation/UserMenu.tsx",[],"/Users/zaneclaes/OWS/Makerverse/App/src/components/Login/LoginPage.tsx",["147","148","149","150","151","152","153","154","155","156"],"/Users/zaneclaes/OWS/Makerverse/App/src/components/Navigation/ListMenu.tsx",["157","158"],"import useLogger from '@openworkshop/lib/utils/logging/UseLogger';\nimport { OpenWorkShopIcon } from '@openworkshop/ui/components';\nimport React, { FunctionComponent } from 'react';\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  Divider,\n  List,\n} from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCogs, faHome, faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\nimport { faUsb } from '@fortawesome/free-brands-svg-icons';\nimport { useTranslation } from 'react-i18next';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport {MakerverseContext, useWorkspaces} from '../../lib/Makerverse';\nimport ListMenuItem from './ListMenuItem';\n\ninterface OwnProps {\n  isPermanent: boolean;\n}\n\ntype Props = OwnProps;\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    toolbar: theme.mixins.toolbar,\n  }),\n);\n\nconst ListMenu: FunctionComponent<Props> = (props) => {\n  const log = useLogger(ListMenu);\n  const { t } = useTranslation();\n  const classes = useStyles();\n  const workspaces = useWorkspaces();\n  const workspaceIds = Object.keys(workspaces.all);\n  const iconStyle = { width: 24, height: 24, marginLeft: -2 };\n\n  function renderRouteItem(route: string, text: string, icon: IconProp, t2?: string) {\n    const i = <FontAwesomeIcon size='lg' style={iconStyle} icon={icon} />;\n    return <ListMenuItem to={route} title={text} icon={i} subtitle={t2} />;\n  }\n\n  log.debug('list', workspaces);\n\n  return (\n    <div>\n      <div className={classes.toolbar} />\n      <Divider />\n      <List>\n        {workspaceIds.map((workspaceId) => {\n          const workspace = workspaces.all[workspaceId];\n          const route = `/workspaces/${workspace.id}`;\n          const icon = <OpenWorkShopIcon style={iconStyle} name={workspace.icon} />;\n\n          return <ListMenuItem key={workspaceId} to={route} title={workspace.name} icon={icon} />;\n        })}\n      </List>\n      <Divider />\n      <List>\n        {renderRouteItem('/home', t('Home'), faHome)}\n        {renderRouteItem('/workspaces', t('Connect'), faUsb)}\n        {renderRouteItem('/settings', t('Settings'), faCogs)}\n        {renderRouteItem('/docs', t('Documentation'), faQuestionCircle)}\n      </List>\n    </div>\n  );\n};\n\nexport default ListMenu;\n",[],"/Users/zaneclaes/OWS/Makerverse/App/src/lib/Makerverse/MakerverseContext.ts",["159","160","161","162","163","164"],"/Users/zaneclaes/OWS/Makerverse/App/src/views/index.ts",[],"/Users/zaneclaes/OWS/Makerverse/App/src/components/Login/index.ts",[],[],"/Users/zaneclaes/OWS/Makerverse/App/src/components/Navigation/index.tsx",[],"/Users/zaneclaes/OWS/Makerverse/App/src/lib/workspaces/active-state.ts",[],[],"/Users/zaneclaes/OWS/Makerverse/App/src/constants/docs.ts",[],"/Users/zaneclaes/OWS/Makerverse/App/src/views/WorkspaceCreator/index.tsx",[],[],"/Users/zaneclaes/OWS/Makerverse/App/src/api/graphql.tsx",["165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213"],"import { GraphQLResolveInfo, GraphQLScalarType, GraphQLScalarTypeConfig } from 'graphql';\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type RequireFields<T, K extends keyof T> = { [X in Exclude<keyof T, K>]?: T[X] } & { [P in K]-?: NonNullable<T[P]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** The `Long` scalar type represents non-fractional signed whole 64-bit numeric values. Long can represent values between -(2^63) and 2^63 - 1. */\n  Long: any;\n  /** The built-in `Decimal` scalar type. */\n  Decimal: any;\n};\n\nexport type AppUpdates = {\n  __typename?: 'AppUpdates';\n  checkForUpdates: Scalars['Boolean'];\n  prereleases: Scalars['Boolean'];\n};\n\nexport type CommandSettings = {\n  __typename?: 'CommandSettings';\n  commands: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  id: Scalars['String'];\n  mtime: Scalars['Long'];\n  title: Scalars['String'];\n};\n\nexport type ConnectionSettings = {\n  __typename?: 'ConnectionSettings';\n  firmware: MachineFirmwareSettings;\n  manufacturer: Maybe<Scalars['String']>;\n  port: Scalars['String'];\n};\n\nexport type EventSettings = {\n  __typename?: 'EventSettings';\n  commands: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  event: Scalars['String'];\n  id: Scalars['String'];\n  mtime: Scalars['Long'];\n  trigger: Scalars['String'];\n};\n\nexport type FileSystemSettings = {\n  __typename?: 'FileSystemSettings';\n  mountPoints: Array<MountPointSettings>;\n  programDirectory: Scalars['String'];\n};\n\nexport type MachineAxisSettings = {\n  __typename?: 'MachineAxisSettings';\n  accuracy: Scalars['Decimal'];\n  id: Maybe<Scalars['String']>;\n  max: Scalars['Decimal'];\n  min: Scalars['Decimal'];\n  name: AxisName;\n  precision: Scalars['Decimal'];\n};\n\nexport type MachineCommandSettings = {\n  __typename?: 'MachineCommandSettings';\n  id: Scalars['String'];\n  name: Scalars['String'];\n  value: Scalars['String'];\n};\n\nexport type MachineFeatureSettings = {\n  __typename?: 'MachineFeatureSettings';\n  description: Maybe<Scalars['String']>;\n  disabled: Scalars['Boolean'];\n  icon: Maybe<Scalars['String']>;\n  id: Maybe<Scalars['String']>;\n  key: Scalars['String'];\n  title: Maybe<Scalars['String']>;\n};\n\nexport type MachineFirmwareSettings = {\n  __typename?: 'MachineFirmwareSettings';\n  baudRate: BaudRate;\n  controllerType: MachineControllerType;\n  downloadUrl: Maybe<Scalars['String']>;\n  edition: Maybe<Scalars['String']>;\n  helpUrl: Maybe<Scalars['String']>;\n  id: Maybe<Scalars['String']>;\n  name: Maybe<Scalars['String']>;\n  requiredVersion: Scalars['Decimal'];\n  rtscts: Scalars['Boolean'];\n  suggestedVersion: Scalars['Decimal'];\n};\n\nexport type MachinePartSettings = {\n  __typename?: 'MachinePartSettings';\n  dataBlob: Maybe<Scalars['String']>;\n  description: Maybe<Scalars['String']>;\n  id: Maybe<Scalars['String']>;\n  isDefault: Scalars['Boolean'];\n  optional: Scalars['Boolean'];\n  partType: MachinePartType;\n  settings: Array<MachineSettingSettings>;\n  specs: Array<MachineSpecSettings>;\n  title: Scalars['String'];\n};\n\nexport type MachineSettingSettings = {\n  __typename?: 'MachineSettingSettings';\n  id: Scalars['String'];\n  key: Scalars['String'];\n  settingType: MachineSettingType;\n  title: Scalars['String'];\n  value: Scalars['String'];\n};\n\nexport type MachineSpecSettings = {\n  __typename?: 'MachineSpecSettings';\n  id: Scalars['String'];\n  specType: MachineSpecType;\n  value: Scalars['Decimal'];\n};\n\nexport type MacroSettings = {\n  __typename?: 'MacroSettings';\n  content: Scalars['String'];\n  id: Scalars['String'];\n  mtime: Scalars['Long'];\n  name: Scalars['String'];\n};\n\nexport type MakerverseSettings = {\n  __typename?: 'MakerverseSettings';\n  appUpdates: AppUpdates;\n  commands: Array<CommandSettings>;\n  events: Array<EventSettings>;\n  fileSystem: FileSystemSettings;\n  macros: Array<MacroSettings>;\n  users: Array<MakerverseUser>;\n  workspaces: Array<WorkspaceSettings>;\n};\n\nexport type MakerverseUser = {\n  __typename?: 'MakerverseUser';\n  authenticationType: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  id: Maybe<Scalars['String']>;\n  tokens: Array<Scalars['String']>;\n  username: Scalars['String'];\n};\n\nexport type MountPointSettings = {\n  __typename?: 'MountPointSettings';\n  route: Scalars['String'];\n  target: Scalars['String'];\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  authenticate: MakerverseUser;\n  settings: Maybe<MakerverseSettings>;\n};\n\n\nexport type QueryAuthenticateArgs = {\n  token: Scalars['String'];\n};\n\nexport type WorkspaceSettings = {\n  __typename?: 'WorkspaceSettings';\n  autoReconnect: Scalars['Boolean'];\n  axes: Array<MachineAxisSettings>;\n  color: Maybe<Scalars['String']>;\n  commands: Array<MachineCommandSettings>;\n  connection: ConnectionSettings;\n  features: Array<MachineFeatureSettings>;\n  icon: Maybe<Scalars['String']>;\n  id: Scalars['String'];\n  machineProfileId: Maybe<Scalars['String']>;\n  name: Scalars['String'];\n  onboarded: Scalars['Boolean'];\n  parts: Array<MachinePartSettings>;\n  path: Scalars['String'];\n  preferImperial: Scalars['Boolean'];\n};\n\nexport enum AxisName {\n  X = 'X',\n  Y = 'Y',\n  Z = 'Z'\n}\n\nexport enum BaudRate {\n  Br115200 = 'BR115200',\n  Br19200 = 'BR19200',\n  Br2400 = 'BR2400',\n  Br250000 = 'BR250000',\n  Br38400 = 'BR38400',\n  Br57600 = 'BR57600',\n  Br9600 = 'BR9600'\n}\n\nexport enum MachineControllerType {\n  Grbl = 'GRBL',\n  Marlin = 'MARLIN',\n  Maslow = 'MASLOW',\n  Smoothie = 'SMOOTHIE',\n  TinyG = 'TINY_G'\n}\n\nexport enum MachinePartType {\n  AxisMotor = 'AXIS_MOTOR',\n  Board = 'BOARD',\n  EmergencyStop = 'EMERGENCY_STOP',\n  Heatbed = 'HEATBED',\n  Hotend = 'HOTEND',\n  LimitSwitches = 'LIMIT_SWITCHES',\n  Mmu = 'MMU',\n  Nozzle = 'NOZZLE',\n  Psu = 'PSU',\n  Shield = 'SHIELD',\n  Sled = 'SLED',\n  Spindle = 'SPINDLE',\n  Unknown = 'UNKNOWN'\n}\n\nexport enum MachineSettingType {\n  Grbl = 'GRBL',\n  Kv = 'KV'\n}\n\nexport enum MachineSpecType {\n  MaxAmps = 'MAX_AMPS',\n  MaxLayerHeight = 'MAX_LAYER_HEIGHT',\n  MaxRpm = 'MAX_RPM',\n  MaxTemp = 'MAX_TEMP',\n  MaxTravelSpeed = 'MAX_TRAVEL_SPEED',\n  MaxVolts = 'MAX_VOLTS',\n  MaxWatts = 'MAX_WATTS',\n  MinLayerHeight = 'MIN_LAYER_HEIGHT',\n  NumberOfMaterials = 'NUMBER_OF_MATERIALS',\n  TipSize = 'TIP_SIZE',\n  Watts = 'WATTS',\n  WaveLength = 'WAVE_LENGTH'\n}\n\n\n\n\n\nexport type ResolverTypeWrapper<T> = Promise<T> | T;\n\n\nexport type LegacyStitchingResolver<TResult, TParent, TContext, TArgs> = {\n  fragment: string;\n  resolve: ResolverFn<TResult, TParent, TContext, TArgs>;\n};\n\nexport type NewStitchingResolver<TResult, TParent, TContext, TArgs> = {\n  selectionSet: string;\n  resolve: ResolverFn<TResult, TParent, TContext, TArgs>;\n};\nexport type StitchingResolver<TResult, TParent, TContext, TArgs> = LegacyStitchingResolver<TResult, TParent, TContext, TArgs> | NewStitchingResolver<TResult, TParent, TContext, TArgs>;\nexport type Resolver<TResult, TParent = {}, TContext = {}, TArgs = {}> =\n  | ResolverFn<TResult, TParent, TContext, TArgs>\n  | StitchingResolver<TResult, TParent, TContext, TArgs>;\n\nexport type ResolverFn<TResult, TParent, TContext, TArgs> = (\n  parent: TParent,\n  args: TArgs,\n  context: TContext,\n  info: GraphQLResolveInfo\n) => Promise<TResult> | TResult;\n\nexport type SubscriptionSubscribeFn<TResult, TParent, TContext, TArgs> = (\n  parent: TParent,\n  args: TArgs,\n  context: TContext,\n  info: GraphQLResolveInfo\n) => AsyncIterator<TResult> | Promise<AsyncIterator<TResult>>;\n\nexport type SubscriptionResolveFn<TResult, TParent, TContext, TArgs> = (\n  parent: TParent,\n  args: TArgs,\n  context: TContext,\n  info: GraphQLResolveInfo\n) => TResult | Promise<TResult>;\n\nexport interface SubscriptionSubscriberObject<TResult, TKey extends string, TParent, TContext, TArgs> {\n  subscribe: SubscriptionSubscribeFn<{ [key in TKey]: TResult }, TParent, TContext, TArgs>;\n  resolve?: SubscriptionResolveFn<TResult, { [key in TKey]: TResult }, TContext, TArgs>;\n}\n\nexport interface SubscriptionResolverObject<TResult, TParent, TContext, TArgs> {\n  subscribe: SubscriptionSubscribeFn<any, TParent, TContext, TArgs>;\n  resolve: SubscriptionResolveFn<TResult, any, TContext, TArgs>;\n}\n\nexport type SubscriptionObject<TResult, TKey extends string, TParent, TContext, TArgs> =\n  | SubscriptionSubscriberObject<TResult, TKey, TParent, TContext, TArgs>\n  | SubscriptionResolverObject<TResult, TParent, TContext, TArgs>;\n\nexport type SubscriptionResolver<TResult, TKey extends string, TParent = {}, TContext = {}, TArgs = {}> =\n  | ((...args: any[]) => SubscriptionObject<TResult, TKey, TParent, TContext, TArgs>)\n  | SubscriptionObject<TResult, TKey, TParent, TContext, TArgs>;\n\nexport type TypeResolveFn<TTypes, TParent = {}, TContext = {}> = (\n  parent: TParent,\n  context: TContext,\n  info: GraphQLResolveInfo\n) => Maybe<TTypes> | Promise<Maybe<TTypes>>;\n\nexport type IsTypeOfResolverFn<T = {}, TContext = {}> = (obj: T, context: TContext, info: GraphQLResolveInfo) => boolean | Promise<boolean>;\n\nexport type NextResolverFn<T> = () => Promise<T>;\n\nexport type DirectiveResolverFn<TResult = {}, TParent = {}, TContext = {}, TArgs = {}> = (\n  next: NextResolverFn<TResult>,\n  parent: TParent,\n  args: TArgs,\n  context: TContext,\n  info: GraphQLResolveInfo\n) => TResult | Promise<TResult>;\n\n/** Mapping between all available schema types and the resolvers types */\nexport type ResolversTypes = {\n  AppUpdates: ResolverTypeWrapper<AppUpdates>;\n  Boolean: ResolverTypeWrapper<Scalars['Boolean']>;\n  CommandSettings: ResolverTypeWrapper<CommandSettings>;\n  String: ResolverTypeWrapper<Scalars['String']>;\n  ConnectionSettings: ResolverTypeWrapper<ConnectionSettings>;\n  EventSettings: ResolverTypeWrapper<EventSettings>;\n  FileSystemSettings: ResolverTypeWrapper<FileSystemSettings>;\n  MachineAxisSettings: ResolverTypeWrapper<MachineAxisSettings>;\n  MachineCommandSettings: ResolverTypeWrapper<MachineCommandSettings>;\n  MachineFeatureSettings: ResolverTypeWrapper<MachineFeatureSettings>;\n  MachineFirmwareSettings: ResolverTypeWrapper<MachineFirmwareSettings>;\n  MachinePartSettings: ResolverTypeWrapper<MachinePartSettings>;\n  MachineSettingSettings: ResolverTypeWrapper<MachineSettingSettings>;\n  MachineSpecSettings: ResolverTypeWrapper<MachineSpecSettings>;\n  MacroSettings: ResolverTypeWrapper<MacroSettings>;\n  MakerverseSettings: ResolverTypeWrapper<MakerverseSettings>;\n  MakerverseUser: ResolverTypeWrapper<MakerverseUser>;\n  MountPointSettings: ResolverTypeWrapper<MountPointSettings>;\n  Query: ResolverTypeWrapper<{}>;\n  WorkspaceSettings: ResolverTypeWrapper<WorkspaceSettings>;\n  AxisName: AxisName;\n  BaudRate: BaudRate;\n  MachineControllerType: MachineControllerType;\n  MachinePartType: MachinePartType;\n  MachineSettingType: MachineSettingType;\n  MachineSpecType: MachineSpecType;\n  Long: ResolverTypeWrapper<Scalars['Long']>;\n  Decimal: ResolverTypeWrapper<Scalars['Decimal']>;\n};\n\n/** Mapping between all available schema types and the resolvers parents */\nexport type ResolversParentTypes = {\n  AppUpdates: AppUpdates;\n  Boolean: Scalars['Boolean'];\n  CommandSettings: CommandSettings;\n  String: Scalars['String'];\n  ConnectionSettings: ConnectionSettings;\n  EventSettings: EventSettings;\n  FileSystemSettings: FileSystemSettings;\n  MachineAxisSettings: MachineAxisSettings;\n  MachineCommandSettings: MachineCommandSettings;\n  MachineFeatureSettings: MachineFeatureSettings;\n  MachineFirmwareSettings: MachineFirmwareSettings;\n  MachinePartSettings: MachinePartSettings;\n  MachineSettingSettings: MachineSettingSettings;\n  MachineSpecSettings: MachineSpecSettings;\n  MacroSettings: MacroSettings;\n  MakerverseSettings: MakerverseSettings;\n  MakerverseUser: MakerverseUser;\n  MountPointSettings: MountPointSettings;\n  Query: {};\n  WorkspaceSettings: WorkspaceSettings;\n  Long: Scalars['Long'];\n  Decimal: Scalars['Decimal'];\n};\n\nexport type AppUpdatesResolvers<ContextType = any, ParentType extends ResolversParentTypes['AppUpdates'] = ResolversParentTypes['AppUpdates']> = {\n  checkForUpdates: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;\n  prereleases: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;\n  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;\n};\n\nexport type CommandSettingsResolvers<ContextType = any, ParentType extends ResolversParentTypes['CommandSettings'] = ResolversParentTypes['CommandSettings']> = {\n  commands: Resolver<ResolversTypes['String'], ParentType, ContextType>;\n  enabled: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;\n  id: Resolver<ResolversTypes['String'], ParentType, ContextType>;\n  mtime: Resolver<ResolversTypes['Long'], ParentType, ContextType>;\n  title: Resolver<ResolversTypes['String'], ParentType, ContextType>;\n  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;\n};\n\nexport type ConnectionSettingsResolvers<ContextType = any, ParentType extends ResolversParentTypes['ConnectionSettings'] = ResolversParentTypes['ConnectionSettings']> = {\n  firmware: Resolver<ResolversTypes['MachineFirmwareSettings'], ParentType, ContextType>;\n  manufacturer: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;\n  port: Resolver<ResolversTypes['String'], ParentType, ContextType>;\n  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;\n};\n\nexport type EventSettingsResolvers<ContextType = any, ParentType extends ResolversParentTypes['EventSettings'] = ResolversParentTypes['EventSettings']> = {\n  commands: Resolver<ResolversTypes['String'], ParentType, ContextType>;\n  enabled: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;\n  event: Resolver<ResolversTypes['String'], ParentType, ContextType>;\n  id: Resolver<ResolversTypes['String'], ParentType, ContextType>;\n  mtime: Resolver<ResolversTypes['Long'], ParentType, ContextType>;\n  trigger: Resolver<ResolversTypes['String'], ParentType, ContextType>;\n  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;\n};\n\nexport type FileSystemSettingsResolvers<ContextType = any, ParentType extends ResolversParentTypes['FileSystemSettings'] = ResolversParentTypes['FileSystemSettings']> = {\n  mountPoints: Resolver<Array<ResolversTypes['MountPointSettings']>, ParentType, ContextType>;\n  programDirectory: Resolver<ResolversTypes['String'], ParentType, ContextType>;\n  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;\n};\n\nexport type MachineAxisSettingsResolvers<ContextType = any, ParentType extends ResolversParentTypes['MachineAxisSettings'] = ResolversParentTypes['MachineAxisSettings']> = {\n  accuracy: Resolver<ResolversTypes['Decimal'], ParentType, ContextType>;\n  id: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;\n  max: Resolver<ResolversTypes['Decimal'], ParentType, ContextType>;\n  min: Resolver<ResolversTypes['Decimal'], ParentType, ContextType>;\n  name: Resolver<ResolversTypes['AxisName'], ParentType, ContextType>;\n  precision: Resolver<ResolversTypes['Decimal'], ParentType, ContextType>;\n  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;\n};\n\nexport type MachineCommandSettingsResolvers<ContextType = any, ParentType extends ResolversParentTypes['MachineCommandSettings'] = ResolversParentTypes['MachineCommandSettings']> = {\n  id: Resolver<ResolversTypes['String'], ParentType, ContextType>;\n  name: Resolver<ResolversTypes['String'], ParentType, ContextType>;\n  value: Resolver<ResolversTypes['String'], ParentType, ContextType>;\n  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;\n};\n\nexport type MachineFeatureSettingsResolvers<ContextType = any, ParentType extends ResolversParentTypes['MachineFeatureSettings'] = ResolversParentTypes['MachineFeatureSettings']> = {\n  description: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;\n  disabled: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;\n  icon: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;\n  id: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;\n  key: Resolver<ResolversTypes['String'], ParentType, ContextType>;\n  title: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;\n  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;\n};\n\nexport type MachineFirmwareSettingsResolvers<ContextType = any, ParentType extends ResolversParentTypes['MachineFirmwareSettings'] = ResolversParentTypes['MachineFirmwareSettings']> = {\n  baudRate: Resolver<ResolversTypes['BaudRate'], ParentType, ContextType>;\n  controllerType: Resolver<ResolversTypes['MachineControllerType'], ParentType, ContextType>;\n  downloadUrl: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;\n  edition: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;\n  helpUrl: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;\n  id: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;\n  name: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;\n  requiredVersion: Resolver<ResolversTypes['Decimal'], ParentType, ContextType>;\n  rtscts: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;\n  suggestedVersion: Resolver<ResolversTypes['Decimal'], ParentType, ContextType>;\n  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;\n};\n\nexport type MachinePartSettingsResolvers<ContextType = any, ParentType extends ResolversParentTypes['MachinePartSettings'] = ResolversParentTypes['MachinePartSettings']> = {\n  dataBlob: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;\n  description: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;\n  id: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;\n  isDefault: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;\n  optional: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;\n  partType: Resolver<ResolversTypes['MachinePartType'], ParentType, ContextType>;\n  settings: Resolver<Array<ResolversTypes['MachineSettingSettings']>, ParentType, ContextType>;\n  specs: Resolver<Array<ResolversTypes['MachineSpecSettings']>, ParentType, ContextType>;\n  title: Resolver<ResolversTypes['String'], ParentType, ContextType>;\n  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;\n};\n\nexport type MachineSettingSettingsResolvers<ContextType = any, ParentType extends ResolversParentTypes['MachineSettingSettings'] = ResolversParentTypes['MachineSettingSettings']> = {\n  id: Resolver<ResolversTypes['String'], ParentType, ContextType>;\n  key: Resolver<ResolversTypes['String'], ParentType, ContextType>;\n  settingType: Resolver<ResolversTypes['MachineSettingType'], ParentType, ContextType>;\n  title: Resolver<ResolversTypes['String'], ParentType, ContextType>;\n  value: Resolver<ResolversTypes['String'], ParentType, ContextType>;\n  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;\n};\n\nexport type MachineSpecSettingsResolvers<ContextType = any, ParentType extends ResolversParentTypes['MachineSpecSettings'] = ResolversParentTypes['MachineSpecSettings']> = {\n  id: Resolver<ResolversTypes['String'], ParentType, ContextType>;\n  specType: Resolver<ResolversTypes['MachineSpecType'], ParentType, ContextType>;\n  value: Resolver<ResolversTypes['Decimal'], ParentType, ContextType>;\n  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;\n};\n\nexport type MacroSettingsResolvers<ContextType = any, ParentType extends ResolversParentTypes['MacroSettings'] = ResolversParentTypes['MacroSettings']> = {\n  content: Resolver<ResolversTypes['String'], ParentType, ContextType>;\n  id: Resolver<ResolversTypes['String'], ParentType, ContextType>;\n  mtime: Resolver<ResolversTypes['Long'], ParentType, ContextType>;\n  name: Resolver<ResolversTypes['String'], ParentType, ContextType>;\n  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;\n};\n\nexport type MakerverseSettingsResolvers<ContextType = any, ParentType extends ResolversParentTypes['MakerverseSettings'] = ResolversParentTypes['MakerverseSettings']> = {\n  appUpdates: Resolver<ResolversTypes['AppUpdates'], ParentType, ContextType>;\n  commands: Resolver<Array<ResolversTypes['CommandSettings']>, ParentType, ContextType>;\n  events: Resolver<Array<ResolversTypes['EventSettings']>, ParentType, ContextType>;\n  fileSystem: Resolver<ResolversTypes['FileSystemSettings'], ParentType, ContextType>;\n  macros: Resolver<Array<ResolversTypes['MacroSettings']>, ParentType, ContextType>;\n  users: Resolver<Array<ResolversTypes['MakerverseUser']>, ParentType, ContextType>;\n  workspaces: Resolver<Array<ResolversTypes['WorkspaceSettings']>, ParentType, ContextType>;\n  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;\n};\n\nexport type MakerverseUserResolvers<ContextType = any, ParentType extends ResolversParentTypes['MakerverseUser'] = ResolversParentTypes['MakerverseUser']> = {\n  authenticationType: Resolver<ResolversTypes['String'], ParentType, ContextType>;\n  enabled: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;\n  id: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;\n  tokens: Resolver<Array<ResolversTypes['String']>, ParentType, ContextType>;\n  username: Resolver<ResolversTypes['String'], ParentType, ContextType>;\n  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;\n};\n\nexport type MountPointSettingsResolvers<ContextType = any, ParentType extends ResolversParentTypes['MountPointSettings'] = ResolversParentTypes['MountPointSettings']> = {\n  route: Resolver<ResolversTypes['String'], ParentType, ContextType>;\n  target: Resolver<ResolversTypes['String'], ParentType, ContextType>;\n  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;\n};\n\nexport type QueryResolvers<ContextType = any, ParentType extends ResolversParentTypes['Query'] = ResolversParentTypes['Query']> = {\n  authenticate: Resolver<ResolversTypes['MakerverseUser'], ParentType, ContextType, RequireFields<QueryAuthenticateArgs, 'token'>>;\n  settings: Resolver<Maybe<ResolversTypes['MakerverseSettings']>, ParentType, ContextType>;\n};\n\nexport type WorkspaceSettingsResolvers<ContextType = any, ParentType extends ResolversParentTypes['WorkspaceSettings'] = ResolversParentTypes['WorkspaceSettings']> = {\n  autoReconnect: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;\n  axes: Resolver<Array<ResolversTypes['MachineAxisSettings']>, ParentType, ContextType>;\n  color: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;\n  commands: Resolver<Array<ResolversTypes['MachineCommandSettings']>, ParentType, ContextType>;\n  connection: Resolver<ResolversTypes['ConnectionSettings'], ParentType, ContextType>;\n  features: Resolver<Array<ResolversTypes['MachineFeatureSettings']>, ParentType, ContextType>;\n  icon: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;\n  id: Resolver<ResolversTypes['String'], ParentType, ContextType>;\n  machineProfileId: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;\n  name: Resolver<ResolversTypes['String'], ParentType, ContextType>;\n  onboarded: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;\n  parts: Resolver<Array<ResolversTypes['MachinePartSettings']>, ParentType, ContextType>;\n  path: Resolver<ResolversTypes['String'], ParentType, ContextType>;\n  preferImperial: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;\n  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;\n};\n\nexport interface LongScalarConfig extends GraphQLScalarTypeConfig<ResolversTypes['Long'], any> {\n  name: 'Long';\n}\n\nexport interface DecimalScalarConfig extends GraphQLScalarTypeConfig<ResolversTypes['Decimal'], any> {\n  name: 'Decimal';\n}\n\nexport type Resolvers<ContextType = any> = {\n  AppUpdates: AppUpdatesResolvers<ContextType>;\n  CommandSettings: CommandSettingsResolvers<ContextType>;\n  ConnectionSettings: ConnectionSettingsResolvers<ContextType>;\n  EventSettings: EventSettingsResolvers<ContextType>;\n  FileSystemSettings: FileSystemSettingsResolvers<ContextType>;\n  MachineAxisSettings: MachineAxisSettingsResolvers<ContextType>;\n  MachineCommandSettings: MachineCommandSettingsResolvers<ContextType>;\n  MachineFeatureSettings: MachineFeatureSettingsResolvers<ContextType>;\n  MachineFirmwareSettings: MachineFirmwareSettingsResolvers<ContextType>;\n  MachinePartSettings: MachinePartSettingsResolvers<ContextType>;\n  MachineSettingSettings: MachineSettingSettingsResolvers<ContextType>;\n  MachineSpecSettings: MachineSpecSettingsResolvers<ContextType>;\n  MacroSettings: MacroSettingsResolvers<ContextType>;\n  MakerverseSettings: MakerverseSettingsResolvers<ContextType>;\n  MakerverseUser: MakerverseUserResolvers<ContextType>;\n  MountPointSettings: MountPointSettingsResolvers<ContextType>;\n  Query: QueryResolvers<ContextType>;\n  WorkspaceSettings: WorkspaceSettingsResolvers<ContextType>;\n  Long: GraphQLScalarType;\n  Decimal: GraphQLScalarType;\n};\n\n\n/**\n * @deprecated\n * Use \"Resolvers\" root object instead. If you wish to get \"IResolvers\", add \"typesPrefix: I\" to your config.\n */\nexport type IResolvers<ContextType = any> = Resolvers<ContextType>;\n\nexport type AuthenticateQueryVariables = Exact<{\n  token: Scalars['String'];\n}>;\n\n\nexport type AuthenticateQuery = (\n  { __typename?: 'Query' }\n  & { authenticate: (\n    { __typename?: 'MakerverseUser' }\n    & MakerverseUserFullFragment\n  ) }\n);\n\nexport type MakerverseUserMinFragment = (\n  { __typename?: 'MakerverseUser' }\n  & Pick<MakerverseUser, 'username'>\n);\n\nexport type MakerverseUserFullFragment = (\n  { __typename?: 'MakerverseUser' }\n  & Pick<MakerverseUser, 'id' | 'authenticationType' | 'enabled' | 'tokens'>\n  & MakerverseUserMinFragment\n);\n\nexport type CommandFragment = (\n  { __typename?: 'CommandSettings' }\n  & Pick<CommandSettings, 'id' | 'mtime' | 'enabled' | 'title' | 'commands'>\n);\n\nexport type EventFragment = (\n  { __typename?: 'EventSettings' }\n  & Pick<EventSettings, 'id' | 'mtime' | 'enabled' | 'event' | 'trigger' | 'commands'>\n);\n\nexport type FileSystemFragment = (\n  { __typename?: 'FileSystemSettings' }\n  & Pick<FileSystemSettings, 'programDirectory'>\n  & { mountPoints: Array<(\n    { __typename?: 'MountPointSettings' }\n    & Pick<MountPointSettings, 'route' | 'target'>\n  )> }\n);\n\nexport type MakerverseSettingsStartupFragment = (\n  { __typename?: 'MakerverseSettings' }\n  & { fileSystem: (\n    { __typename?: 'FileSystemSettings' }\n    & FileSystemFragment\n  ), appUpdates: (\n    { __typename?: 'AppUpdates' }\n    & Pick<AppUpdates, 'checkForUpdates' | 'prereleases'>\n  ), commands: Array<(\n    { __typename?: 'CommandSettings' }\n    & CommandFragment\n  )>, events: Array<(\n    { __typename?: 'EventSettings' }\n    & EventFragment\n  )>, macros: Array<(\n    { __typename?: 'MacroSettings' }\n    & Pick<MacroSettings, 'id' | 'mtime' | 'name' | 'content'>\n  )>, users: Array<(\n    { __typename?: 'MakerverseUser' }\n    & MakerverseUserFullFragment\n  )> }\n);\n\nexport const FileSystemFragmentDoc = gql`\n    fragment FileSystem on FileSystemSettings {\n  programDirectory\n  mountPoints {\n    route\n    target\n  }\n}\n    `;\nexport const CommandFragmentDoc = gql`\n    fragment Command on CommandSettings {\n  id\n  mtime\n  enabled\n  title\n  commands\n}\n    `;\nexport const EventFragmentDoc = gql`\n    fragment Event on EventSettings {\n  id\n  mtime\n  enabled\n  event\n  trigger\n  commands\n}\n    `;\nexport const MakerverseUserMinFragmentDoc = gql`\n    fragment MakerverseUserMin on MakerverseUser {\n  username\n}\n    `;\nexport const MakerverseUserFullFragmentDoc = gql`\n    fragment MakerverseUserFull on MakerverseUser {\n  ...MakerverseUserMin\n  id\n  authenticationType\n  enabled\n  tokens\n}\n    ${MakerverseUserMinFragmentDoc}`;\nexport const MakerverseSettingsStartupFragmentDoc = gql`\n    fragment MakerverseSettingsStartup on MakerverseSettings {\n  fileSystem {\n    ...FileSystem\n  }\n  appUpdates {\n    checkForUpdates\n    prereleases\n  }\n  commands {\n    ...Command\n  }\n  events {\n    ...Event\n  }\n  macros {\n    id\n    mtime\n    name\n    content\n  }\n  users {\n    ...MakerverseUserFull\n  }\n}\n    ${FileSystemFragmentDoc}\n${CommandFragmentDoc}\n${EventFragmentDoc}\n${MakerverseUserFullFragmentDoc}`;\nexport const AuthenticateDocument = gql`\n    query Authenticate($token: String!) {\n  authenticate(token: $token) {\n    ...MakerverseUserFull\n  }\n}\n    ${MakerverseUserFullFragmentDoc}`;\n\n/**\n * __useAuthenticateQuery__\n *\n * To run a query within a React component, call `useAuthenticateQuery` and pass it any options that fit your needs.\n * When your component renders, `useAuthenticateQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useAuthenticateQuery({\n *   variables: {\n *      token: // value for 'token'\n *   },\n * });\n */\nexport function useAuthenticateQuery(baseOptions: Apollo.QueryHookOptions<AuthenticateQuery, AuthenticateQueryVariables>) {\n        return Apollo.useQuery<AuthenticateQuery, AuthenticateQueryVariables>(AuthenticateDocument, baseOptions);\n      }\nexport function useAuthenticateLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<AuthenticateQuery, AuthenticateQueryVariables>) {\n          return Apollo.useLazyQuery<AuthenticateQuery, AuthenticateQueryVariables>(AuthenticateDocument, baseOptions);\n        }\nexport type AuthenticateQueryHookResult = ReturnType<typeof useAuthenticateQuery>;\nexport type AuthenticateLazyQueryHookResult = ReturnType<typeof useAuthenticateLazyQuery>;\nexport type AuthenticateQueryResult = Apollo.QueryResult<AuthenticateQuery, AuthenticateQueryVariables>;",[],"/Users/zaneclaes/OWS/Makerverse/App/src/components/Login/Styles.ts",[],"/Users/zaneclaes/OWS/Makerverse/App/src/store/redux.ts",[],"/Users/zaneclaes/OWS/Makerverse/App/src/components/Navigation/Styles.ts",[],"/Users/zaneclaes/OWS/Makerverse/App/src/lib/workspaces/workspace.ts",["214","215"],"/Users/zaneclaes/OWS/Makerverse/App/src/views/WorkspaceCreator/Styles.ts",[],[],"/Users/zaneclaes/OWS/Makerverse/App/src/lib/semvers.ts",[],"/Users/zaneclaes/OWS/Makerverse/App/src/components/Navigation/HeaderBar.tsx",[],"/Users/zaneclaes/OWS/Makerverse/App/src/components/Navigation/ListMenuItem.tsx",[],"/Users/zaneclaes/OWS/Makerverse/App/src/components/Navigation/NotFound.tsx",[],"/Users/zaneclaes/OWS/Makerverse/App/src/components/Navigation/SideDrawer.tsx",[],"/Users/zaneclaes/OWS/Makerverse/App/src/lib/analytics.ts",["216","217","218"],"/Users/zaneclaes/OWS/Makerverse/App/src/views/Workspace/index.tsx",[],"/Users/zaneclaes/OWS/Makerverse/App/src/components/Navigation/ProtectedRoute.tsx",[],"/Users/zaneclaes/OWS/Makerverse/App/src/lib/Makerverse/Workspaces.ts",[],"/Users/zaneclaes/OWS/Makerverse/App/src/lib/Makerverse/Hooks.ts",[],"/Users/zaneclaes/OWS/Makerverse/App/src/components/Login/TokenValidator.tsx",[],"/Users/zaneclaes/OWS/Makerverse/App/src/views/App.tsx",["219"],"/Users/zaneclaes/OWS/Makerverse/App/src/views/MakerverseProvider.tsx",["220"],{"ruleId":"221","severity":1,"message":"222","line":22,"column":49,"nodeType":"223","messageId":"224","endLine":22,"endColumn":54},{"ruleId":"221","severity":1,"message":"225","line":30,"column":9,"nodeType":"223","messageId":"224","endLine":30,"endColumn":18},{"ruleId":"221","severity":1,"message":"226","line":51,"column":12,"nodeType":"223","messageId":"224","endLine":51,"endColumn":23},{"ruleId":"221","severity":1,"message":"227","line":3,"column":3,"nodeType":"223","messageId":"224","endLine":3,"endColumn":7},{"ruleId":"221","severity":1,"message":"228","line":4,"column":3,"nodeType":"223","messageId":"224","endLine":4,"endColumn":14},{"ruleId":"221","severity":1,"message":"229","line":5,"column":3,"nodeType":"223","messageId":"224","endLine":5,"endColumn":14},{"ruleId":"221","severity":1,"message":"230","line":6,"column":3,"nodeType":"223","messageId":"224","endLine":6,"endColumn":13},{"ruleId":"221","severity":1,"message":"231","line":10,"column":3,"nodeType":"223","messageId":"224","endLine":10,"endColumn":10},{"ruleId":"221","severity":1,"message":"232","line":16,"column":8,"nodeType":"223","messageId":"224","endLine":16,"endColumn":18},{"ruleId":"221","severity":1,"message":"233","line":26,"column":10,"nodeType":"223","messageId":"224","endLine":26,"endColumn":20},{"ruleId":"221","severity":1,"message":"234","line":26,"column":22,"nodeType":"223","messageId":"224","endLine":26,"endColumn":33},{"ruleId":"221","severity":1,"message":"222","line":34,"column":46,"nodeType":"223","messageId":"224","endLine":34,"endColumn":51},{"ruleId":"221","severity":1,"message":"235","line":39,"column":17,"nodeType":"223","messageId":"224","endLine":39,"endColumn":25},{"ruleId":"221","severity":1,"message":"236","line":16,"column":9,"nodeType":"223","messageId":"224","endLine":16,"endColumn":26},{"ruleId":"221","severity":1,"message":"222","line":30,"column":45,"nodeType":"223","messageId":"224","endLine":30,"endColumn":50},{"ruleId":"221","severity":1,"message":"237","line":1,"column":10,"nodeType":"223","messageId":"224","endLine":1,"endColumn":22},{"ruleId":"221","severity":1,"message":"238","line":1,"column":24,"nodeType":"223","messageId":"224","endLine":1,"endColumn":41},{"ruleId":"221","severity":1,"message":"239","line":1,"column":43,"nodeType":"223","messageId":"224","endLine":1,"endColumn":64},{"ruleId":"221","severity":1,"message":"240","line":6,"column":9,"nodeType":"223","messageId":"224","endLine":6,"endColumn":29},{"ruleId":"221","severity":1,"message":"241","line":6,"column":31,"nodeType":"223","messageId":"224","endLine":6,"endColumn":48},{"ruleId":"242","severity":1,"message":"243","line":95,"column":11,"nodeType":"223","messageId":"244","endLine":95,"endColumn":14},{"ruleId":"245","severity":1,"message":"246","line":15,"column":9,"nodeType":"247","messageId":"248","endLine":15,"endColumn":12,"suggestions":"249"},{"ruleId":"245","severity":1,"message":"246","line":17,"column":12,"nodeType":"247","messageId":"248","endLine":17,"endColumn":15,"suggestions":"250"},{"ruleId":"251","severity":2,"message":"252","line":268,"column":41,"nodeType":"253","messageId":"254","endLine":268,"endColumn":43},{"ruleId":"251","severity":2,"message":"252","line":268,"column":56,"nodeType":"253","messageId":"254","endLine":268,"endColumn":58},{"ruleId":"251","severity":2,"message":"252","line":268,"column":68,"nodeType":"253","messageId":"254","endLine":268,"endColumn":70},{"ruleId":"245","severity":1,"message":"246","line":299,"column":38,"nodeType":"247","messageId":"248","endLine":299,"endColumn":41,"suggestions":"255"},{"ruleId":"245","severity":1,"message":"246","line":300,"column":43,"nodeType":"247","messageId":"248","endLine":300,"endColumn":46,"suggestions":"256"},{"ruleId":"251","severity":2,"message":"252","line":307,"column":74,"nodeType":"253","messageId":"254","endLine":307,"endColumn":76},{"ruleId":"251","severity":2,"message":"252","line":307,"column":89,"nodeType":"253","messageId":"254","endLine":307,"endColumn":91},{"ruleId":"251","severity":2,"message":"252","line":307,"column":101,"nodeType":"253","messageId":"254","endLine":307,"endColumn":103},{"ruleId":"245","severity":1,"message":"246","line":308,"column":16,"nodeType":"247","messageId":"248","endLine":308,"endColumn":19,"suggestions":"257"},{"ruleId":"251","severity":2,"message":"252","line":311,"column":45,"nodeType":"253","messageId":"254","endLine":311,"endColumn":47},{"ruleId":"251","severity":2,"message":"252","line":311,"column":60,"nodeType":"253","messageId":"254","endLine":311,"endColumn":62},{"ruleId":"251","severity":2,"message":"252","line":317,"column":36,"nodeType":"253","messageId":"254","endLine":317,"endColumn":38},{"ruleId":"251","severity":2,"message":"252","line":317,"column":51,"nodeType":"253","messageId":"254","endLine":317,"endColumn":53},{"ruleId":"251","severity":2,"message":"252","line":321,"column":43,"nodeType":"253","messageId":"254","endLine":321,"endColumn":45},{"ruleId":"251","severity":2,"message":"252","line":321,"column":57,"nodeType":"253","messageId":"254","endLine":321,"endColumn":59},{"ruleId":"251","severity":2,"message":"252","line":321,"column":72,"nodeType":"253","messageId":"254","endLine":321,"endColumn":74},{"ruleId":"251","severity":2,"message":"252","line":321,"column":84,"nodeType":"253","messageId":"254","endLine":321,"endColumn":86},{"ruleId":"251","severity":2,"message":"252","line":349,"column":30,"nodeType":"253","messageId":"254","endLine":349,"endColumn":32},{"ruleId":"251","severity":2,"message":"252","line":381,"column":10,"nodeType":"253","messageId":"254","endLine":381,"endColumn":12},{"ruleId":"245","severity":1,"message":"246","line":387,"column":47,"nodeType":"247","messageId":"248","endLine":387,"endColumn":50,"suggestions":"258"},{"ruleId":"245","severity":1,"message":"246","line":393,"column":52,"nodeType":"247","messageId":"248","endLine":393,"endColumn":55,"suggestions":"259"},{"ruleId":"245","severity":1,"message":"246","line":402,"column":55,"nodeType":"247","messageId":"248","endLine":402,"endColumn":58,"suggestions":"260"},{"ruleId":"245","severity":1,"message":"246","line":409,"column":50,"nodeType":"247","messageId":"248","endLine":409,"endColumn":53,"suggestions":"261"},{"ruleId":"245","severity":1,"message":"246","line":419,"column":55,"nodeType":"247","messageId":"248","endLine":419,"endColumn":58,"suggestions":"262"},{"ruleId":"245","severity":1,"message":"246","line":425,"column":56,"nodeType":"247","messageId":"248","endLine":425,"endColumn":59,"suggestions":"263"},{"ruleId":"245","severity":1,"message":"246","line":435,"column":59,"nodeType":"247","messageId":"248","endLine":435,"endColumn":62,"suggestions":"264"},{"ruleId":"245","severity":1,"message":"246","line":442,"column":59,"nodeType":"247","messageId":"248","endLine":442,"endColumn":62,"suggestions":"265"},{"ruleId":"245","severity":1,"message":"246","line":452,"column":60,"nodeType":"247","messageId":"248","endLine":452,"endColumn":63,"suggestions":"266"},{"ruleId":"245","severity":1,"message":"246","line":466,"column":56,"nodeType":"247","messageId":"248","endLine":466,"endColumn":59,"suggestions":"267"},{"ruleId":"245","severity":1,"message":"246","line":479,"column":59,"nodeType":"247","messageId":"248","endLine":479,"endColumn":62,"suggestions":"268"},{"ruleId":"245","severity":1,"message":"246","line":488,"column":56,"nodeType":"247","messageId":"248","endLine":488,"endColumn":59,"suggestions":"269"},{"ruleId":"245","severity":1,"message":"246","line":495,"column":50,"nodeType":"247","messageId":"248","endLine":495,"endColumn":53,"suggestions":"270"},{"ruleId":"245","severity":1,"message":"246","line":503,"column":55,"nodeType":"247","messageId":"248","endLine":503,"endColumn":58,"suggestions":"271"},{"ruleId":"245","severity":1,"message":"246","line":514,"column":51,"nodeType":"247","messageId":"248","endLine":514,"endColumn":54,"suggestions":"272"},{"ruleId":"245","severity":1,"message":"246","line":523,"column":55,"nodeType":"247","messageId":"248","endLine":523,"endColumn":58,"suggestions":"273"},{"ruleId":"245","severity":1,"message":"246","line":529,"column":42,"nodeType":"247","messageId":"248","endLine":529,"endColumn":45,"suggestions":"274"},{"ruleId":"245","severity":1,"message":"246","line":534,"column":54,"nodeType":"247","messageId":"248","endLine":534,"endColumn":57,"suggestions":"275"},{"ruleId":"245","severity":1,"message":"246","line":552,"column":91,"nodeType":"247","messageId":"248","endLine":552,"endColumn":94,"suggestions":"276"},{"ruleId":"245","severity":1,"message":"246","line":556,"column":97,"nodeType":"247","messageId":"248","endLine":556,"endColumn":100,"suggestions":"277"},{"ruleId":"245","severity":1,"message":"246","line":560,"column":37,"nodeType":"247","messageId":"248","endLine":560,"endColumn":40,"suggestions":"278"},{"ruleId":"245","severity":1,"message":"246","line":588,"column":38,"nodeType":"247","messageId":"248","endLine":588,"endColumn":41,"suggestions":"279"},{"ruleId":"242","severity":1,"message":"280","line":751,"column":8,"nodeType":"281","messageId":"282","endLine":751,"endColumn":122},{"ruleId":"283","severity":2,"message":"284","line":752,"column":1,"nodeType":"285","messageId":"286","endLine":752,"endColumn":9,"fix":"287"},{"ruleId":"283","severity":2,"message":"288","line":753,"column":1,"nodeType":"289","messageId":"286","endLine":753,"endColumn":7,"fix":"290"},{"ruleId":"242","severity":1,"message":"280","line":754,"column":8,"nodeType":"281","messageId":"282","endLine":754,"endColumn":131},{"ruleId":"283","severity":2,"message":"291","line":755,"column":1,"nodeType":"285","messageId":"286","endLine":755,"endColumn":11,"fix":"292"},{"ruleId":"283","severity":2,"message":"293","line":756,"column":1,"nodeType":"289","messageId":"286","endLine":756,"endColumn":9,"fix":"294"},{"ruleId":"242","severity":1,"message":"280","line":322,"column":3,"nodeType":"295","messageId":"282","endLine":322,"endColumn":50},{"ruleId":"242","severity":1,"message":"280","line":538,"column":3,"nodeType":"295","messageId":"282","endLine":538,"endColumn":39},{"ruleId":"242","severity":1,"message":"280","line":43,"column":23,"nodeType":"296","messageId":"282","endLine":43,"endColumn":59},{"ruleId":"242","severity":1,"message":"280","line":58,"column":19,"nodeType":"296","messageId":"282","endLine":58,"endColumn":66},{"ruleId":"242","severity":1,"message":"280","line":68,"column":15,"nodeType":"296","messageId":"282","endLine":68,"endColumn":38},{"ruleId":"242","severity":1,"message":"280","line":10,"column":16,"nodeType":"281","messageId":"282","endLine":10,"endColumn":30},{"ruleId":"221","severity":1,"message":"297","line":23,"column":16,"nodeType":"223","messageId":"224","endLine":23,"endColumn":23},"@typescript-eslint/no-unused-vars","'props' is defined but never used.","Identifier","unusedVar","'isLoading' is assigned a value but never used.","'renderError' is defined but never used.","'Card' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'CardHeader' is defined but never used.","'Toolbar' is defined but never used.","'CardFooter' is defined but never used.","'useHistory' is defined but never used.","'useLocation' is defined but never used.","'setGuest' is assigned a value but never used.","'MakerverseContext' is defined but never used.","'ApolloClient' is defined but never used.","'ApolloQueryResult' is defined but never used.","'NormalizedCacheObject' is defined but never used.","'AuthenticateDocument' is defined but never used.","'AuthenticateQuery' is defined but never used.","@typescript-eslint/explicit-module-boundary-types","Argument 'ows' should be typed.","missingArgType","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["298","299"],["300","301"],"@typescript-eslint/ban-types","Don't use `{}` as a type. `{}` actually means \"any non-nullish value\".\n- If you want a type meaning \"any object\", you probably want `Record<string, unknown>` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.","TSTypeLiteral","bannedTypeMessage",["302","303"],["304","305"],["306","307"],["308","309"],["310","311"],["312","313"],["314","315"],["316","317"],["318","319"],["320","321"],["322","323"],["324","325"],["326","327"],["328","329"],["330","331"],["332","333"],["334","335"],["336","337"],["338","339"],["340","341"],["342","343"],["344","345"],["346","347"],["348","349"],["350","351"],"Missing return type on function.","FunctionDeclaration","missingReturnType","indent","Expected indentation of 2 spaces but found 8.","Keyword","wrongIndentation",{"range":"352","text":"353"},"Expected indentation of 0 spaces but found 6.","Punctuator",{"range":"354","text":"355"},"Expected indentation of 2 spaces but found 10.",{"range":"356","text":"353"},"Expected indentation of 0 spaces but found 8.",{"range":"357","text":"355"},"FunctionExpression","ArrowFunctionExpression","'setUser' is assigned a value but never used.",{"messageId":"358","fix":"359","desc":"360"},{"messageId":"361","fix":"362","desc":"363"},{"messageId":"358","fix":"364","desc":"360"},{"messageId":"361","fix":"365","desc":"363"},{"messageId":"358","fix":"366","desc":"360"},{"messageId":"361","fix":"367","desc":"363"},{"messageId":"358","fix":"368","desc":"360"},{"messageId":"361","fix":"369","desc":"363"},{"messageId":"358","fix":"370","desc":"360"},{"messageId":"361","fix":"371","desc":"363"},{"messageId":"358","fix":"372","desc":"360"},{"messageId":"361","fix":"373","desc":"363"},{"messageId":"358","fix":"374","desc":"360"},{"messageId":"361","fix":"375","desc":"363"},{"messageId":"358","fix":"376","desc":"360"},{"messageId":"361","fix":"377","desc":"363"},{"messageId":"358","fix":"378","desc":"360"},{"messageId":"361","fix":"379","desc":"363"},{"messageId":"358","fix":"380","desc":"360"},{"messageId":"361","fix":"381","desc":"363"},{"messageId":"358","fix":"382","desc":"360"},{"messageId":"361","fix":"383","desc":"363"},{"messageId":"358","fix":"384","desc":"360"},{"messageId":"361","fix":"385","desc":"363"},{"messageId":"358","fix":"386","desc":"360"},{"messageId":"361","fix":"387","desc":"363"},{"messageId":"358","fix":"388","desc":"360"},{"messageId":"361","fix":"389","desc":"363"},{"messageId":"358","fix":"390","desc":"360"},{"messageId":"361","fix":"391","desc":"363"},{"messageId":"358","fix":"392","desc":"360"},{"messageId":"361","fix":"393","desc":"363"},{"messageId":"358","fix":"394","desc":"360"},{"messageId":"361","fix":"395","desc":"363"},{"messageId":"358","fix":"396","desc":"360"},{"messageId":"361","fix":"397","desc":"363"},{"messageId":"358","fix":"398","desc":"360"},{"messageId":"361","fix":"399","desc":"363"},{"messageId":"358","fix":"400","desc":"360"},{"messageId":"361","fix":"401","desc":"363"},{"messageId":"358","fix":"402","desc":"360"},{"messageId":"361","fix":"403","desc":"363"},{"messageId":"358","fix":"404","desc":"360"},{"messageId":"361","fix":"405","desc":"363"},{"messageId":"358","fix":"406","desc":"360"},{"messageId":"361","fix":"407","desc":"363"},{"messageId":"358","fix":"408","desc":"360"},{"messageId":"361","fix":"409","desc":"363"},{"messageId":"358","fix":"410","desc":"360"},{"messageId":"361","fix":"411","desc":"363"},{"messageId":"358","fix":"412","desc":"360"},{"messageId":"361","fix":"413","desc":"363"},{"messageId":"358","fix":"414","desc":"360"},{"messageId":"361","fix":"415","desc":"363"},[28989,28997],"  ",[29103,29109],"",[29244,29254],[29364,29372],"suggestUnknown",{"range":"416","text":"417"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"416","text":"418"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"419","text":"417"},{"range":"419","text":"418"},{"range":"420","text":"417"},{"range":"420","text":"418"},{"range":"421","text":"417"},{"range":"421","text":"418"},{"range":"422","text":"417"},{"range":"422","text":"418"},{"range":"423","text":"417"},{"range":"423","text":"418"},{"range":"424","text":"417"},{"range":"424","text":"418"},{"range":"425","text":"417"},{"range":"425","text":"418"},{"range":"426","text":"417"},{"range":"426","text":"418"},{"range":"427","text":"417"},{"range":"427","text":"418"},{"range":"428","text":"417"},{"range":"428","text":"418"},{"range":"429","text":"417"},{"range":"429","text":"418"},{"range":"430","text":"417"},{"range":"430","text":"418"},{"range":"431","text":"417"},{"range":"431","text":"418"},{"range":"432","text":"417"},{"range":"432","text":"418"},{"range":"433","text":"417"},{"range":"433","text":"418"},{"range":"434","text":"417"},{"range":"434","text":"418"},{"range":"435","text":"417"},{"range":"435","text":"418"},{"range":"436","text":"417"},{"range":"436","text":"418"},{"range":"437","text":"417"},{"range":"437","text":"418"},{"range":"438","text":"417"},{"range":"438","text":"418"},{"range":"439","text":"417"},{"range":"439","text":"418"},{"range":"440","text":"417"},{"range":"440","text":"418"},{"range":"441","text":"417"},{"range":"441","text":"418"},{"range":"442","text":"417"},{"range":"442","text":"418"},{"range":"443","text":"417"},{"range":"443","text":"418"},{"range":"444","text":"417"},{"range":"444","text":"418"},[748,751],"unknown","never",[809,812],[8170,8173],[8244,8247],[8622,8625],[11974,11977],[12348,12351],[12928,12931],[13401,13404],[14049,14052],[14461,14464],[15134,15137],[15587,15590],[16287,16290],[17328,17331],[18293,18296],[18900,18903],[19352,19355],[19853,19856],[20687,20690],[21295,21298],[21658,21661],[22030,22033],[23437,23440],[23559,23562],[23624,23627],[24979,24982]]